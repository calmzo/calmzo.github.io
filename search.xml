<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Hyperf初探2》】</title>
      <link href="/posts/2502701b.html"/>
      <url>/posts/2502701b.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><ul><li><p>Coroutine\MySQL<br>协程MySQL客户端，不推荐使用，推荐使用Swoole\Runtime::enableCoroutine+PDO或Mysqli方式，即一键协程化原生PHP的MySQL客户端</p></li><li><p>hyperf/db-connection组件<br>基于hyperf/pool实现数据库连接池并对模型进行了新的抽象，以它作为桥梁，hyperf才能把数据库组件及事件组件接进来</p></li></ul><h3 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h3><p>普通配置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">return</span> [<br>    <span class="hljs-string">&#x27;default&#x27;</span> =&gt; [<br>        <span class="hljs-string">&#x27;driver&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_DRIVER&#x27;</span>, <span class="hljs-string">&#x27;mysql&#x27;</span>),<br>        <span class="hljs-string">&#x27;host&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_HOST&#x27;</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>),<br>        <span class="hljs-string">&#x27;database&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_DATABASE&#x27;</span>, <span class="hljs-string">&#x27;hyperf&#x27;</span>),<br>        <span class="hljs-string">&#x27;port&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_PORT&#x27;</span>, <span class="hljs-number">3306</span>),<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_USERNAME&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>),<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>),<br>        ...<br>        ]<br>]   <br></code></pre></td></tr></table></figure><p>读写分离配置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">return</span> [<br><span class="hljs-string">&#x27;dafault&#x27;</span>=&gt;[<br><span class="hljs-string">&#x27;driver&#x27;</span>=&gt;<span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;DB_DRIVER&#x27;</span>,<span class="hljs-string">&#x27;mysql&#x27;</span>),<br><span class="hljs-string">&#x27;read&#x27;</span>=&gt;[<br><span class="hljs-string">&#x27;host&#x27;</span>=&gt;[<span class="hljs-string">&#x27;192.168.1.1&#x27;</span>],<br>],<br><span class="hljs-string">&#x27;write&#x27;</span>=&gt;[<br><span class="hljs-string">&#x27;host&#x27;</span>=&gt;[<span class="hljs-string">&#x27;192.168.1.2&#x27;</span>],<br>],<br><span class="hljs-string">&#x27;sticky&#x27;</span>=&gt;<span class="hljs-literal">true</span>,<br><span class="hljs-string">&#x27;database&#x27;</span>=&gt;<span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&quot;DB_DATABASE&quot;</span>,<span class="hljs-string">&#x27;hyperf&#x27;</span>),<br><span class="hljs-string">&#x27;port&#x27;</span>=&gt;<span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&quot;DB_PORT&quot;</span>,<span class="hljs-string">&#x27;3306&#x27;</span>),<br>....<br>]<br>]<br></code></pre></td></tr></table></figure><p>env文件配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs env">DB_DRIVER=mysql<br>DB_HOST=nj-cdb-4sabbghb.sql.xxx.com<br>DB_PORT=6xxx6<br>DB_DATABASE=xxx-dev<br>DB_USERNAME=xxx<br>DB_PASSWORD=xxx@2022<br>DB_CHARSET=utf8mb4<br>DB_COLLATION=utf8mb4_unicode_ci<br>DB_PREFIX=<br></code></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php bin/hyperf.php gen:model 表名<br></code></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>Query查询类<br>方式同laravel</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="配置文件路由"><a href="#配置文件路由" class="headerlink" title="配置文件路由"></a>配置文件路由</h3><ol><li>通过闭包定义路由<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Router</span>\<span class="hljs-title">Router</span>;<br><br><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;/hello-hyperf&#x27;</span>, function () &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello Hyperf.&#x27;</span>;<br>&#125;);<br></code></pre></td></tr></table></figure></li><li>定义标准路由<br>标准路由: 控制器(Controller) 和 操作(Action) 来处理的路由<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Router</span>\<span class="hljs-title">Router</span>;<br><br><span class="hljs-comment">// 下面三种方式的任意一种都可以达到同样的效果</span><br><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;/hello-hyperf&#x27;</span>, <span class="hljs-string">&#x27;App\Controller\IndexController::hello&#x27;</span>);<br><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;/hello-hyperf&#x27;</span>, <span class="hljs-string">&#x27;App\Controller\IndexController@hello&#x27;</span>);<br><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;/hello-hyperf&#x27;</span>, [<span class="hljs-title class_">App\Controller\IndexController</span>::<span class="hljs-variable language_">class</span>, <span class="hljs-string">&#x27;hello&#x27;</span>]);<br></code></pre></td></tr></table></figure></li><li>路由组<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">addGroup</span>(<span class="hljs-string">&#x27;/user/&#x27;</span>,function ()&#123;<br>    <span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;index&#x27;</span>,<span class="hljs-string">&#x27;App\Controller\UserController@index&#x27;</span>);<br>    <span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">post</span>(<span class="hljs-string">&#x27;store&#x27;</span>,<span class="hljs-string">&#x27;App\Controller\UserController@store&#x27;</span>);<br>    <span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;update&#x27;</span>,<span class="hljs-string">&#x27;App\Controller\UserController@update&#x27;</span>);<br>    <span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">post</span>(<span class="hljs-string">&#x27;delete&#x27;</span>,<span class="hljs-string">&#x27;App\Controller\UserController@delete&#x27;</span>);<br>&#125;);<br><br></code></pre></td></tr></table></figure></li></ol><h3 id="注解路由"><a href="#注解路由" class="headerlink" title="注解路由"></a>注解路由</h3><p><a href="https://hyperf.wiki/2.2/#/zh-cn/annotation">注解</a> 路由<br>在任意类上通过定义 @Controller 或 @AutoController 注解来完成一个路由的定义</p><h4 id="AutoController-注解"><a href="#AutoController-注解" class="headerlink" title="@AutoController 注解"></a>@AutoController 注解</h4><blockquote><p>使用 @AutoController 注解时需 use Hyperf\HttpServer\Annotation\AutoController; 命名空间；</p></blockquote><table><thead><tr><th>控制器</th><th>注解</th><th>访问路由</th></tr></thead><tbody><tr><td>MyDataController</td><td>@AutoController()</td><td>/my_data/index</td></tr><tr><td>MydataController</td><td>@AutoController()</td><td>/mydata/index</td></tr><tr><td>MyDataController</td><td>@AutoController(prefix=”/data”)</td><td>/data/index</td></tr></tbody></table><h4 id="Controller-注解"><a href="#Controller-注解" class="headerlink" title="@Controller 注解"></a>@Controller 注解</h4><p>@Controller 为满足更细致的路由定义需求而存在，使用 @Controller 注解用于表明当前类为一个 Controller 类，同时需配合 @RequestMapping 注解来对请求方法和请求路径进行更详细的定义。<br>我们也提供了多种快速便捷的 Mapping 注解，如 @GetMapping、@PostMapping、@PutMapping、@PatchMapping、@DeleteMapping 5 种便捷的注解用于表明允许不同的请求方法。</p><blockquote><p>使用 @Controller 注解时需 use Hyperf\HttpServer\Annotation\Controller; 命名空间；<br>使用 @RequestMapping 注解时需 use Hyperf\HttpServer\Annotation\RequestMapping; 命名空间；<br>使用 @GetMapping 注解时需 use Hyperf\HttpServer\Annotation\GetMapping; 命名空间；<br>使用 @PostMapping 注解时需 use Hyperf\HttpServer\Annotation\PostMapping; 命名空间；<br>使用 @PutMapping 注解时需 use Hyperf\HttpServer\Annotation\PutMapping; 命名空间；<br>使用 @PatchMapping 注解时需 use Hyperf\HttpServer\Annotation\PatchMapping; 命名空间；<br>使用 @DeleteMapping 注解时需 use Hyperf\HttpServer\Annotation\DeleteMapping; 命名空间；</p></blockquote><p>注解参数<br><strong>@Controller</strong> 和 <strong>@AutoController</strong> 都提供了 <strong>prefix</strong> 和 <strong>server</strong> 两个参数。<br><strong>prefix</strong> 表示该 Controller 下的所有方法路由的前缀，默认为类名的小写，如 <strong>UserController</strong> 则 <strong>prefix</strong> 默认为 <strong>user</strong>，如类内某一方法的 <strong>path</strong> 为 <strong>index</strong>，则最终路由为 <strong>/user/index</strong>。<br>需要注意的是 <strong>prefix</strong> 并非一直有效，当类内的方法的 <strong>path</strong> 以 / 开头时，则表明路径从 URI 头部开始定义，也就意味着会忽略 <strong>prefix</strong> 的值。<br><strong>server</strong> 表示该路由是定义在哪个 <strong>Server</strong> 之上的，由于 Hyperf 支持同时启动多个 <strong>Server</strong>，也就意味着有可能会同时存在多个 <strong>HTTP Server</strong>，则在定义路由是可以通过 <strong>server</strong> 参数来进行区分这个路由是为了哪个 <strong>Server</strong> 定义的，默认为 <strong>http</strong>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">declare</span>(strict_types=<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Service</span>\<span class="hljs-title">UserService</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Contract</span>\<span class="hljs-title">RequestInterface</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Controller</span>()</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractController</span></span><br><span class="hljs-class"></span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$userService</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">UserService <span class="hljs-variable">$userService</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;userService = <span class="hljs-variable">$userService</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@RequestMapping</span>(path=&quot;detail&quot;, methods=&quot;get&quot;)</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> RequestInterface $request</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findOne</span>(<span class="hljs-params">RequestInterface <span class="hljs-variable">$request</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$name</span> = <span class="hljs-variable">$request</span>-&gt;<span class="hljs-title function_ invoke__">input</span>(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;userService-&gt;<span class="hljs-title function_ invoke__">findUser</span>(<span class="hljs-variable">$name</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="路由参数"><a href="#路由参数" class="headerlink" title="路由参数"></a>路由参数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title class_">Router</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;/user/&#123;id&#125;&#x27;</span>, <span class="hljs-string">&#x27;App\Controller\UserController::info&#x27;</span>);<br><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">info</span>(<span class="hljs-params"><span class="hljs-keyword">int</span> <span class="hljs-variable">$id</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$user</span> = <span class="hljs-title class_">User</span>::<span class="hljs-title function_ invoke__">find</span>(<span class="hljs-variable">$id</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">toArray</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="必填参数"><a href="#必填参数" class="headerlink" title="必填参数"></a>必填参数</h4><p>我们可以对 $uri 进行一些参数定义，通过 {} 来声明参数，如 /user/{id} 则声明了 id 值为一个必填参数。</p><h4 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h4><p>有时候您可能会希望这个参数是可选的，您可以通过 [] 来声明中括号内的参数为一个可选参数，如 /user/[{id}]。</p><h4 id="获取路由信息"><a href="#获取路由信息" class="headerlink" title="获取路由信息"></a>获取路由信息</h4><p>如果安装了 devtool 组件，可使用 php bin/hyperf.php describe:routes 命令获取路由列表信息， 并且提供 path 可选项，方便获取单个路由信息，对应的命令 php bin/hyperf.php describe:routes –path=/foo/bar。</p><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>洋葱模型<br>中间件主要用于编织从 <strong>请求(Request)</strong> 到 <strong>响应(Response)</strong> 的整个流程</p><h3 id="生成中间件"><a href="#生成中间件" class="headerlink" title="生成中间件"></a>生成中间件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php ./bin/hyperf.php gen:middleware Auth/FooMiddleware<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">declare</span>(strict_types=<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Middleware</span>\<span class="hljs-title class_">Auth</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Contract</span>\<span class="hljs-title">RequestInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Contract</span>\<span class="hljs-title">ResponseInterface</span> <span class="hljs-keyword">as</span> <span class="hljs-title">HttpResponse</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Container</span>\<span class="hljs-title">ContainerInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Message</span>\<span class="hljs-title">ResponseInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Message</span>\<span class="hljs-title">ServerRequestInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Server</span>\<span class="hljs-title">MiddlewareInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Server</span>\<span class="hljs-title">RequestHandlerInterface</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FooMiddleware</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">MiddlewareInterface</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@var</span> ContainerInterface</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$container</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@var</span> RequestInterface</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$request</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@var</span> HttpResponse</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$response</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">ContainerInterface <span class="hljs-variable">$container</span>, HttpResponse <span class="hljs-variable">$response</span>, RequestInterface <span class="hljs-variable">$request</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;container = <span class="hljs-variable">$container</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;response = <span class="hljs-variable">$response</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;request = <span class="hljs-variable">$request</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params">ServerRequestInterface <span class="hljs-variable">$request</span>, RequestHandlerInterface <span class="hljs-variable">$handler</span></span>): <span class="hljs-title">ResponseInterface</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-comment">// 根据具体业务判断逻辑走向，这里假设用户携带的token有效</span><br>        <span class="hljs-variable">$isValidToken</span> = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$isValidToken</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$handler</span>-&gt;<span class="hljs-title function_ invoke__">handle</span>(<span class="hljs-variable">$request</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;response-&gt;<span class="hljs-title function_ invoke__">json</span>(<br>            [<br>                <span class="hljs-string">&#x27;code&#x27;</span> =&gt; -<span class="hljs-number">1</span>,<br>                <span class="hljs-string">&#x27;data&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;error&#x27;</span> =&gt; <span class="hljs-string">&#x27;中间件验证token无效，阻止继续向下执行&#x27;</span>,<br>                ],<br>            ]<br>        );<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="全局中间件"><a href="#全局中间件" class="headerlink" title="全局中间件"></a>全局中间件</h3><p>全局中间件只可通过配置文件的方式来配置，配置文件位于 <strong>config/autoload/middlewares.php</strong> ，配置如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">return</span> [<br>    <span class="hljs-comment">// http 对应 config/autoload/server.php 内每个 server 的 name 属性对应的值，该配置仅应用在该 Server 中</span><br>    <span class="hljs-string">&#x27;http&#x27;</span> =&gt; [<br>        <span class="hljs-comment">// 数组内配置您的全局中间件，顺序根据该数组的顺序</span><br>        <span class="hljs-title class_">YourMiddleware</span>::<span class="hljs-variable language_">class</span><br>    ],<br>];<br></code></pre></td></tr></table></figure><h3 id="局部中间件"><a href="#局部中间件" class="headerlink" title="局部中间件"></a>局部中间件</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><blockquote><p>使用 @Middleware 注解时需 use Hyperf\HttpServer\Annotation\Middleware; 命名空间；<br>使用 @Middlewares 注解时需 use Hyperf\HttpServer\Annotation\Middlewares; 命名空间；</p></blockquote><p>定义单个中间件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Middleware</span>\<span class="hljs-title">FooMiddleware</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Annotation</span>\<span class="hljs-title">AutoController</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Annotation</span>\<span class="hljs-title">Middleware</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@AutoController</span>()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Middleware</span>(FooMiddleware::class)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IndexController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello Hyperf.&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>定义多个中间件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Middleware</span>\<span class="hljs-title">BarMiddleware</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Middleware</span>\<span class="hljs-title">FooMiddleware</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Annotation</span>\<span class="hljs-title">AutoController</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Annotation</span>\<span class="hljs-title">Middleware</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">HttpServer</span>\<span class="hljs-title">Annotation</span>\<span class="hljs-title">Middlewares</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@AutoController</span>()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Middlewares</span>(&#123;</span><br><span class="hljs-comment"> *     <span class="hljs-doctag">@Middleware</span>(FooMiddleware::class),</span><br><span class="hljs-comment"> *     <span class="hljs-doctag">@Middleware</span>(BarMiddleware::class)</span><br><span class="hljs-comment"> * &#125;)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IndexController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello Hyperf.&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="常用中间件"><a href="#常用中间件" class="headerlink" title="常用中间件"></a>常用中间件</h3><ul><li>跨域中间件<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">declare</span>(strict_types=<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Middleware</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">Hyperf</span>\<span class="hljs-title">Utils</span>\<span class="hljs-title">Context</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Message</span>\<span class="hljs-title">ResponseInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Message</span>\<span class="hljs-title">ServerRequestInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Server</span>\<span class="hljs-title">MiddlewareInterface</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Psr</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Server</span>\<span class="hljs-title">RequestHandlerInterface</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CorsMiddleware</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">MiddlewareInterface</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params">ServerRequestInterface <span class="hljs-variable">$request</span>, RequestHandlerInterface <span class="hljs-variable">$handler</span></span>): <span class="hljs-title">ResponseInterface</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$response</span> = <span class="hljs-title class_">Context</span>::<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-title class_">ResponseInterface</span>::<span class="hljs-variable language_">class</span>);<br>        <span class="hljs-variable">$response</span> = <span class="hljs-variable">$response</span>-&gt;<span class="hljs-title function_ invoke__">withHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<br>            -&gt;<span class="hljs-title function_ invoke__">withHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="hljs-string">&#x27;true&#x27;</span>)<br>            <span class="hljs-comment">// Headers 可以根据实际情况进行改写。</span><br>            -&gt;<span class="hljs-title function_ invoke__">withHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="hljs-string">&#x27;DNT,Keep-Alive,User-Agent,Cache-Control,Content-Type,Authorization&#x27;</span>);<br><br>        <span class="hljs-title class_">Context</span>::<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-title class_">ResponseInterface</span>::<span class="hljs-variable language_">class</span>, <span class="hljs-variable">$response</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$request</span>-&gt;<span class="hljs-title function_ invoke__">getMethod</span>() == <span class="hljs-string">&#x27;OPTIONS&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$response</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$handler</span>-&gt;<span class="hljs-title function_ invoke__">handle</span>(<span class="hljs-variable">$request</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><h3 id="IOC控制翻转-DI依赖注入"><a href="#IOC控制翻转-DI依赖注入" class="headerlink" title="IOC控制翻转  DI依赖注入"></a>IOC控制翻转  DI依赖注入</h3><h4 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h4><ol><li>构造方法注入</li><li>通过Inject注解注入<h4 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h4>简单对象注入<br>抽象对象注入<br>工厂对象注入</li></ol><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><p><strong>面向切面编程</strong><br>通过 <strong>切面(Aspect)</strong> 介入到任意类的任意方法的执行流程中去，从而改变或加强原方法的功能</p><p>基于DI实现 使用hfperf/di<br>通过DI创建的对象才能使AOP生效</p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>参数校验、日志、无侵入埋点、安全统计、性能统计、事务处理、异常处理、缓存、无侵入监控、资源池、连接池管理</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>1、app下新建文件夹Aspect<br>2、新建indexAspect.php<br>定义要切入的类</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
          <category> Hyperf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Hyperf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hyperf初探《1、安装》】</title>
      <link href="/posts/660ecc6d.html"/>
      <url>/posts/660ecc6d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hyperf初探"><a href="#Hyperf初探" class="headerlink" title="Hyperf初探"></a>Hyperf初探</h1><h2 id="官网及文档"><a href="#官网及文档" class="headerlink" title="官网及文档"></a>官网及文档</h2><ul><li>官网 <a href="https://hyperf.io/">https://hyperf.io</a></li><li>文档 <a href="https://hyperf.wiki/">https://hyperf.wiki</a></li></ul><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="两种安装方式"><a href="#两种安装方式" class="headerlink" title="两种安装方式"></a>两种安装方式</h3><ol><li>通过 Composer 创建项目</li></ol><p>基于 Swoole 驱动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">composer create-project hyperf/hyperf-skeleton<br></code></pre></td></tr></table></figure><p>基于 Swow 驱动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">composer create-project hyperf/swow-skeleton<br></code></pre></td></tr></table></figure><ol start="2"><li>Docker 下开发</li></ol><h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>由于mac本机docker环境部署laravel环境，暂采用mac本地环境部署hyperf</p><ul><li>PHP &gt;= 7.4 and &lt;= 8.0</li><li>以下任一网络引擎<ul><li>Swoole PHP 扩展 &gt;= 4.5，并关闭了 Short Name</li><li>Swow PHP 扩展 (Beta)</li></ul></li><li>JSON PHP 扩展</li><li>Pcntl PHP 扩展</li><li>OpenSSL PHP 扩展（如需要使用到 HTTPS）</li><li>PDO PHP 扩展 （如需要使用到 MySQL 客户端）</li><li>Redis PHP 扩展 （如需要使用到 Redis 客户端）</li><li>Protobuf PHP 扩展 （如需要使用到 gRPC 服务端或客户端）</li></ul><p>扩展编译安装<br><a href="../posts/3fc5bd43.html">点击这里查看这篇文章</a></p><h3 id="遇到问题："><a href="#遇到问题：" class="headerlink" title="遇到问题："></a>遇到问题：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ERROR] Swoole short function names must be disabled before the server starts, please set swoole.use_shortname = &#x27;Off&#x27; in your php.ini.<br></code></pre></td></tr></table></figure><p>您需要在您的 php.ini 配置文件增加 <strong>swoole.use_shortname = ‘Off’</strong> 配置项</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
          <category> Hyperf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Hyperf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Mac编译安装PHP扩展】</title>
      <link href="/posts/3fc5bd43.html"/>
      <url>/posts/3fc5bd43.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mac安装PHP扩展"><a href="#Mac安装PHP扩展" class="headerlink" title="Mac安装PHP扩展"></a>Mac安装PHP扩展</h1><h2 id="查看php-ini位置"><a href="#查看php-ini位置" class="headerlink" title="查看php.ini位置"></a>查看php.ini位置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php --ini<br></code></pre></td></tr></table></figure><h2 id="查看php安装位置"><a href="#查看php安装位置" class="headerlink" title="查看php安装位置"></a>查看php安装位置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="编译安装扩展"><a href="#编译安装扩展" class="headerlink" title="编译安装扩展"></a>编译安装扩展</h2><h3 id="swoole"><a href="#swoole" class="headerlink" title="swoole"></a>swoole</h3><h4 id="下载编译安装"><a href="#下载编译安装" class="headerlink" title="下载编译安装"></a>下载编译安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local/opt/php@7.4/include/php/ext <br>wget http://pecl.php.net/get/swoole-4.5.3.tgz<br>tar -zxvf swoole-4.5.3.tgz<br>cd swoole-4.5.3<br>/usr/local/opt/php@7.4/bin/phpize<br>./configure --with-php-config=/usr/local/opt/php@7.4/bin/php-config<br>make<br>make install<br></code></pre></td></tr></table></figure><h4 id="在php-ini加上-extension-swoole"><a href="#在php-ini加上-extension-swoole" class="headerlink" title="在php.ini加上 extension=swoole"></a>在php.ini加上 extension=swoole</h4><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><h4 id="下载编译安装-1"><a href="#下载编译安装-1" class="headerlink" title="下载编译安装"></a>下载编译安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/nicolasff/phpredis.git<br>cd phpredis<br>/usr/local/opt/php@7.4/bin/phpize<br>./configure --with-php-config=/usr/local/opt/php@7.4/bin/php-config<br>make<br>make install<br></code></pre></td></tr></table></figure><h4 id="在php-ini加上-extension-redis-so"><a href="#在php-ini加上-extension-redis-so" class="headerlink" title="在php.ini加上 extension=redis.so"></a>在php.ini加上 extension=redis.so</h4><h2 id="重启php"><a href="#重启php" class="headerlink" title="重启php"></a>重启php</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew services list<br>brew services restart php@7.4<br></code></pre></td></tr></table></figure><h2 id="查看扩展"><a href="#查看扩展" class="headerlink" title="查看扩展"></a>查看扩展</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php -m<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> PHP </category>
          
          <category> swoole </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> PHP </tag>
            
            <tag> swoole </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Git不要只会pull和push，试试这5条提高效率的命令】</title>
      <link href="/posts/946f16e6.html"/>
      <url>/posts/946f16e6.html</url>
      
        <content type="html"><![CDATA[<h2 id="Git不要只会pull和push，试试这5条提高效率的命令"><a href="#Git不要只会pull和push，试试这5条提高效率的命令" class="headerlink" title="Git不要只会pull和push，试试这5条提高效率的命令"></a>Git不要只会pull和push，试试这5条提高效率的命令</h2><h3 id="转载链接：出来吧皮卡丘"><a href="#转载链接：出来吧皮卡丘" class="headerlink" title="转载链接：出来吧皮卡丘"></a>转载链接：<a href="https://juejin.cn/post/7071780876501123085">出来吧皮卡丘</a></h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><hr><p>使用 Git 作为代码版本管理，早已是现在开发工程师必备的技能。可大多数工程师还是只会最基本的保存、拉取、推送，遇到一些commit管理的问题就束手无策，或者用一些不优雅的方式解决。<br>本文分享我在开发工作中实践过的实用命令。这些都能够大大提高工作效率，还能解决不少疑难场景。下面会介绍命令，列出应用场景，手摸手教学使用，让同学们看完即学会。</p><h3 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h3><ul><li><p><a href="https://git-scm.com/docs/git-stash">官方文档</a></p></li><li><p><a href="https://www.bookstack.cn/read/git-tutorial/docs-commands-git-stash.md">git 教程</a></p></li></ul><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><blockquote><p>官方解释：当您想记录工作目录和索引的当前状态，但又想返回一个干净的工作目录时，请使用git stash。该命令将保存本地修改，并恢复工作目录以匹配头部提交。</p></blockquote><p>stash 命令能够将还未 commit 的代码存起来，让你的工作目录变得干净。</p><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><p>我猜你心里一定在想：为什么要变干净？<br>应用场景：某一天你正在 feature 分支开发新需求，突然产品经理跑过来说线上有bug，必须马上修复。而此时你的功能开发到一半，于是你急忙想切到 master 分支，然后你就会看到以下报错：</p><p>因为当前有文件更改了，需要提交commit保持工作区干净才能切分支。由于情况紧急，你只有急忙 commit 上去，commit 信息也随便写了个“暂存代码”，于是该分支提交记录就留了一条黑历史…(真人真事，看过这种提交)</p><h4 id="命令使用"><a href="#命令使用" class="headerlink" title="命令使用"></a>命令使用</h4><p>如果你学会 stash，就不用那么狼狈了。你只需要：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git stash<br></code></pre></td></tr></table></figure><p>就这么简单，代码就被存起来了。<br>当你修复完线上问题，切回 feature 分支，想恢复代码也只需要：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git stash apply<br><br></code></pre></td></tr></table></figure><h4 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">保存当前未commit的代码</span><br>git stash<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">保存当前未commit的代码并添加备注</span><br>git stash save &quot;备注的内容&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">列出stash的所有记录</span><br>git stash list<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除stash的所有记录</span><br>git stash clear<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">应用最近一次的stash</span><br>git stash apply<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">应用最近一次的stash，随后删除该记录</span><br>git stash pop<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除最近的一次stash</span><br>git stash drop<br></code></pre></td></tr></table></figure><p>当有多条 stash，可以指定操作stash，首先使用stash list 列出所有记录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git stash list</span><br>stash@&#123;0&#125;: WIP on ...<br>stash@&#123;1&#125;: WIP on ...<br>stash@&#123;2&#125;: On ...<br></code></pre></td></tr></table></figure><p>应用第二条记录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git stash apply stash@&#123;1&#125;</span><br><br></code></pre></td></tr></table></figure><p>pop，drop 同理。</p><h4 id="vscode-集成"><a href="#vscode-集成" class="headerlink" title="vscode 集成"></a>vscode 集成</h4><p>stash 代码</p><p>填写备注内容，也可以不填直接Enter</p><p>在STASHES菜单中可以看到保存的stash</p><p>先点击stash记录旁的小箭头，再点击 apply 或者 pop 都可恢复 stash</p><h3 id="reset-–soft"><a href="#reset-–soft" class="headerlink" title="reset –soft"></a>reset –soft</h3><p>官方文档</p><ul><li><a href="https://www.bookstack.cn/read/git-tutorial/docs-commands-git-reset.md">git 教程</a><h4 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h4></li></ul><blockquote><p>完全不接触索引文件或工作树（但会像所有模式一样，将头部重置为）。这使您的所有更改的文件更改为“要提交的更改”。</p></blockquote><p>回退你已提交的 commit，并将 commit 的修改内容放回到暂存区。<br>一般我们在使用 reset 命令时，<em><strong>git reset –hard</strong></em> 会被提及的比较多，它能让 commit 记录强制回溯到某一个节点。而 <em><strong>git reset –soft</strong></em> 的作用正如其名，***–soft*** (柔软的) 除了回溯节点外，还会保留节点的修改内容。</p><h4 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h4><p>回溯节点，为什么要保留修改内容？<br>应用场景1：有时候手滑不小心把不该提交的内容 commit 了，这时想改回来，只能再 commit 一次，又多一条“黑历史”。<br>应用场景2：规范些的团队，一般对于 commit 的内容要求职责明确，颗粒度要细，便于后续出现问题排查。本来属于两块不同功能的修改，一起 commit 上去，这种就属于不规范。这次恰好又手滑了，一次性 commit 上去。</p><h4 id="命令使用-1"><a href="#命令使用-1" class="headerlink" title="命令使用"></a>命令使用</h4><p>学会 <em><strong>reset –soft</strong></em> 之后，你只需要：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">恢复最近一次 commit</span><br>git reset --soft HEAD^<br></code></pre></td></tr></table></figure><p><strong>reset –soft</strong> 相当于后悔药，给你重新改过的机会。对于上面的场景，就可以再次修改重新提交，保持干净的 commit 记录。<br>以上说的是还未 push 的commit。对于已经 push 的 commit，也可以使用该命令，不过再次 push 时，由于远程分支和本地分支有差异，需要强制推送 <strong>git push -f</strong> 来覆盖被 reset 的 commit。<br>还有一点需要注意，在 <strong>reset –soft</strong> 指定 commit 号时，会将该 commit 到最近一次 commit 的所有修改内容全部恢复，而不是只针对该 commit。<br>举个栗子：<br>commit 记录有 c、b、a。</p><p>reset 到 a。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git reset --soft 1a900ac29eba73ce817bf959f82ffcb0bfa38f75<br><br></code></pre></td></tr></table></figure><p>此时的 HEAD 到了 a，而 b、c 的修改内容都回到了暂存区。</p><h3 id="cherry-pick"><a href="#cherry-pick" class="headerlink" title="cherry-pick"></a>cherry-pick</h3><p><a href="https://git-scm.com/docs/git-cherry-pick">官方文档</a><br><a href="http://www.ruanyifeng.com/blog/2020/04/git-cherry-pick.html">git cherry-pick 教程</a><br>描述</p><blockquote><p>给定一个或多个现有提交，应用每个提交引入的更改，为每个提交记录一个新的提交。这需要您的工作树清洁（没有从头提交的修改）。</p></blockquote><p>将已经提交的 commit，复制出新的 commit 应用到分支里</p><h4 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景"></a>应用场景</h4><p>commit 都提交了，为什么还要复制新的出来？<br>应用场景1：有时候版本的一些优化需求开发到一半，可能其中某一个开发完的需求要临时上，或者某些原因导致待开发的需求卡住了已开发完成的需求上线。这时候就需要把 commit 抽出来，单独处理。<br>应用场景2：有时候开发分支中的代码记录被污染了，导致开发分支合到线上分支有问题，这时就需要拉一条干净的开发分支，再从旧的开发分支中，把 commit 复制到新分支。</p><h4 id="命令使用-2"><a href="#命令使用-2" class="headerlink" title="命令使用"></a>命令使用</h4><h5 id="复制单个"><a href="#复制单个" class="headerlink" title="复制单个"></a>复制单个</h5><p>现在有一条feature分支，commit 记录如下：</p><p>需要把 b 复制到另一个分支，首先把 commitHash 复制下来，然后切到 master 分支。</p><p>当前 master 最新的记录是 a，使用 cherry-pick 把 b 应用到当前分支。</p><p>完成后看下最新的 log，b 已经应用到 master，作为最新的 commit 了。可以看到 commitHash 和之前的不一样，但是提交时间还是保留之前的。</p><h5 id="复制多个"><a href="#复制多个" class="headerlink" title="复制多个"></a>复制多个</h5><p>以上是单个 commit 的复制，下面再来看看 <strong>cherry-pick</strong> 多个 commit 要如何操作。</p><ul><li>一次转移多个提交：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git cherry-pick commit1 commit2<br><br></code></pre></td></tr></table></figure><p>上面的命令将 commit1 和 commit2 两个提交应用到当前分支。</p><ul><li>多个连续的commit，也可区间复制：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git cherry-pick commit1^..commit2<br><br></code></pre></td></tr></table></figure><p>上面的命令将 commit1 到 commit2 这个区间的 commit 都应用到当前分支（包含commit1、commit2），commit1 是最早的提交。</p><h4 id="cherry-pick-代码冲突"><a href="#cherry-pick-代码冲突" class="headerlink" title="cherry-pick 代码冲突"></a>cherry-pick 代码冲突</h4><p>在 cherry-pick 多个commit时，可能会遇到代码冲突，这时 cherry-pick 会停下来，让用户决定如何继续操作。下面看看怎么解决这种场景。</p><p>还是 feature 分支，现在需要把 c、d、e 都复制到 master 分支上。先把起点c和终点e的 commitHash 记下来。</p><p>切到 master 分支，使用区间的 cherry-pick。可以看到 c 被成功复制，当进行到 d 时，发现代码冲突，cherry-pick 中断了。这时需要解决代码冲突，重新提交到暂存区。</p><p>然后使用 cherry-pick –continue 让 cherry-pick 继续进行下去。最后 e 也被复制进来，整个流程就完成了。<br>以上是完整的流程，但有时候可能需要在代码冲突后，放弃或者退出流程：</p><ul><li>放弃 <strong>cherry-pick</strong>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">gits cherry-pick --abort<br><br></code></pre></td></tr></table></figure><p>回到操作前的样子，就像什么都没发生过。</p><ul><li>退出 <strong>cherry-pick</strong>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git cherry-pick --quit<br><br></code></pre></td></tr></table></figure><p>不回到操作前的样子。即保留已经 cherry-pick 成功的 commit，并退出 cherry-pick 流程。</p><h3 id="revert"><a href="#revert" class="headerlink" title="revert"></a>revert</h3><ul><li><a href="https://git-scm.com/docs/git-revert">官方文档</a><br>描述</li></ul><blockquote><p>给定一个或多个现有提交，恢复相关提交引入的更改，并记录一些这些更改的新提交。这就要求你的工作树是干净的（没有来自头部的修改）。</p></blockquote><p>将现有的提交还原，恢复提交的内容，并生成一条还原记录。</p><h4 id="应用场景-3"><a href="#应用场景-3" class="headerlink" title="应用场景"></a>应用场景</h4><p>应用场景：有一天测试突然跟你说，你开发上线的功能有问题，需要马上撤回，否则会影响到系统使用。这时可能会想到用 reset 回退，可是你看了看分支上最新的提交还有其他同事的代码，用 reset 会把这部分代码也撤回了。由于情况紧急，又想不到好方法，还是任性的使用 reset，然后再让同事把他的代码合一遍（同事听到想打人），于是你的技术形象在同事眼里一落千丈。</p><h4 id="命令使用-3"><a href="#命令使用-3" class="headerlink" title="命令使用"></a>命令使用</h4><h5 id="revert-普通提交"><a href="#revert-普通提交" class="headerlink" title="revert 普通提交"></a>revert 普通提交</h5><p>学会 revert 之后，立马就可以拯救这种尴尬的情况。<br>现在 master 记录如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git revert 21dcd937fe555f58841b17466a99118deb489212<br><br></code></pre></td></tr></table></figure><p>revert 掉自己提交的 commit。</p><p>因为 revert 会生成一条新的提交记录，这时会让你编辑提交信息，编辑完后 :wq 保存退出就好了。</p><p>再来看下最新的 log，生成了一条 revert 记录，虽然自己之前的提交记录还是会保留着，但你修改的代码内容已经被撤回了。</p><h6 id="revert-合并提交"><a href="#revert-合并提交" class="headerlink" title="revert 合并提交"></a>revert 合并提交</h6><p>在 git 的 commit 记录里，还有一种类型是合并提交，想要 revert 合并提交，使用上会有些不一样。</p><p>现在的 master 分支里多了条合并提交。</p><p>使用刚刚同样的 revert 方法，会发现命令行报错了。<br>为什么会这样？在官方文档中有解释。</p><p>通常无法 revert 合并，因为您不知道合并的哪一侧应被视为主线。此选项指定主线的父编号（从1开始），并允许 revert 反转相对于指定父编号的更改</p><p>我的理解是因为合并提交是两条分支的交集节点，而 git 不知道需要撤销的哪一条分支，需要添加参数 -m 指定主线分支，保留主线分支的代码，另一条则被撤销。<br>-m 后面要跟一个 parent number 标识出”主线”，一般使用 1 保留主分支代码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git revert -m 1 &lt;commitHash&gt;<br><br></code></pre></td></tr></table></figure><h5 id="revert-合并提交后，再次合并分支会失效"><a href="#revert-合并提交后，再次合并分支会失效" class="headerlink" title="revert 合并提交后，再次合并分支会失效"></a>revert 合并提交后，再次合并分支会失效</h5><p>还是上面的场景，在 master 分支 revert 合并提交后，然后切到 feature 分支修复好 bug，再合并到 master 分支时，会发现之前被 revert 的修改内容没有重新合并进来。<br>因为使用 revert 后， feature 分支的 commit 还是会保留在 master 分支的记录中，当你再次合并进去时，git 判断有相同的 commitHash，就忽略了相关 commit 修改的内容。<br>这时就需要 revert 掉之前 revert 的合并提交，有点拗口，接下来看操作吧。</p><p>现在 master 的记录是这样的。</p><p>再次使用 revert，之前被 revert 的修改内容就又回来了。</p><h4 id="reflog"><a href="#reflog" class="headerlink" title="reflog"></a>reflog</h4><ul><li><a href="https://git-scm.com/docs/git-reflog">官方文档</a><br>描述</li></ul><blockquote><p>此命令管理重录中记录的信息。</p></blockquote><p>如果说 <strong>reset –soft</strong> 是后悔药，那 reflog 就是强力后悔药。它记录了所有的 commit 操作记录，便于错误操作后找回记录。<br>应用场景<br>应用场景：某天你眼花，发现自己在其他人分支提交了代码还推到远程分支，这时因为分支只有你的最新提交，就想着使用 <strong>reset –hard</strong>，结果紧张不小心记错了 commitHash，reset 过头，把同事的 commit 搞没了。没办法，<strong>reset –hard</strong> 是强制回退的，找不到 commitHash 了，只能让同事从本地分支再推一次（同事瞬间拳头就硬了，怎么又是你）。于是，你的技术形象又一落千丈。<br>命令使用</p><p>分支记录如上，想要 reset 到 b。</p><p>误操作 reset 过头，b 没了，最新的只剩下 a。</p><p>这时用 <strong>git reflog</strong> 查看历史记录，把错误提交的那次 commitHash 记下。</p><p>再次 reset 回去，就会发现 b 回来了。</p><h4 id="设置-Git-短命令"><a href="#设置-Git-短命令" class="headerlink" title="设置 Git 短命令"></a>设置 Git 短命令</h4><p>对我这种喜欢敲命令而不用图形化工具的爱好者来说，设置短命令可以很好的提高效率。下面介绍两种设置短命令的方式。</p><h5 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global alias.ps push<br><br></code></pre></td></tr></table></figure><h5 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h5><p>打开全局配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim ~/.gitconfig<br><br></code></pre></td></tr></table></figure><p>写入内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[alias]<br>co = checkout<br>ps = push<br>pl = pull<br>mer = merge --no-ff<br>cp = cherry-pick<br></code></pre></td></tr></table></figure><p>使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">等同于 git cherry-pick &lt;commitHash&gt;</span><br>git cp &lt;commitHash&gt;<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本文主要分享了5个在开发中实用的 Git 命令和设置短命令的方式。</p><ul><li><strong>stash</strong>：存储临时代码。</li><li><strong>reset –soft</strong>：软回溯，回退 commit 的同时保留修改内容。</li><li><strong>cherry-pick</strong>：复制 commit。</li><li><strong>revert</strong>：撤销 commit 的修改内容。</li><li><strong>reflog</strong>：记录了 commit 的历史操作。</li></ul><p>文中列举的应用场景有部分不太恰当，只是想便于同学们理解，最重要的是要理解命令的作用是什么，活学活用才能发挥最大功效。<br>如果你也有一些实用的 Git 命令也欢迎在评论区分享~</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JAVA】环境配置</title>
      <link href="/posts/817a1f94.html"/>
      <url>/posts/817a1f94.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前期准备</p></blockquote><h2 id="1、Jdk安装"><a href="#1、Jdk安装" class="headerlink" title="1、Jdk安装"></a>1、Jdk安装</h2><h3 id="1-下载合适版本："><a href="#1-下载合适版本：" class="headerlink" title="1.下载合适版本："></a>1.下载合适版本：</h3><p>Java JDK下载地址：<br><a href="https://www.oracle.com/java/technologies/downloads/">Java JDK下载地址</a><br>需要下载macOS下的dmg的格式的，根据Mac芯片的不同下载不同的版本；inter芯片的下载X64版本，M芯片下载Arm64版本</p><h3 id="2-点击安装"><a href="#2-点击安装" class="headerlink" title="2.点击安装"></a>2.点击安装</h3><p>双击下载好的dmg<br>通过JDK官方下载地址中的dmg文件进行安装后，如果想知道具体安装到哪个目录，可以执行下面的命令进行查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/libexec/java_home -V<br></code></pre></td></tr></table></figure><p>效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">Matching Java Virtual Machines (2):<br>    1.8.331.09 (x86_64) &quot;Oracle Corporation&quot; - &quot;Java&quot; /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home<br>    1.8.0_331 (x86_64) &quot;Oracle Corporation&quot; - &quot;Java SE 8&quot; /Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home<br>/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home<br></code></pre></td></tr></table></figure><h3 id="3、环境变量配置"><a href="#3、环境变量配置" class="headerlink" title="3、环境变量配置"></a>3、环境变量配置</h3><p>编辑***.bash_profile*** 文件，这是 Mac 配置各种环境变量的地方</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim ~/.bash_profile<br></code></pre></td></tr></table></figure><p>编辑</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">JAVA_HOME</span>=/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents<br><span class="hljs-attribute">CLASSPATH</span>=<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.<br><span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$JAVA_HOME</span>/bin:$PATH:.<br><span class="hljs-built_in">export</span> JAVA_HOME<br><span class="hljs-built_in">export</span> PATH<br><span class="hljs-built_in">export</span> CLASSPATH<br></code></pre></td></tr></table></figure><p>配置生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source .bash_profile<br></code></pre></td></tr></table></figure><p>检查下 Java 环境是否生效，终端输入命令：java -version</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -version<br></code></pre></td></tr></table></figure><p>显示</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">java </span>version <span class="hljs-string">&quot;1.8.0_331&quot;</span><br><span class="hljs-keyword">Java(TM) </span>SE Runtime Environment (<span class="hljs-keyword">build </span><span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>_331-<span class="hljs-keyword">b09)</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">Java </span>HotSpot(TM) <span class="hljs-number">64</span>-<span class="hljs-keyword">Bit </span>Server VM (<span class="hljs-keyword">build </span><span class="hljs-number">25</span>.<span class="hljs-number">331</span>-<span class="hljs-keyword">b09, </span>mixed mode)<br></code></pre></td></tr></table></figure><h2 id="2、Maven安装"><a href="#2、Maven安装" class="headerlink" title="2、Maven安装"></a>2、Maven安装</h2><p>见mac安装maven</p><h2 id="3、mac-Nacos部署"><a href="#3、mac-Nacos部署" class="headerlink" title="3、mac Nacos部署"></a>3、mac Nacos部署</h2><h3 id="1、了解Nacos"><a href="#1、了解Nacos" class="headerlink" title="1、了解Nacos"></a>1、了解Nacos</h3><blockquote><p>了解Nacos<br>什么是Nacos <a href="https://nacos.io/zh-cn/docs/what-is-nacos.html">https://nacos.io/zh-cn/docs/what-is-nacos.html</a></p></blockquote><h3 id="2、下载"><a href="#2、下载" class="headerlink" title="2、下载"></a>2、下载</h3><p>下载地址：<a href="https://github.com/alibaba/Nacos/releases">https://github.com/alibaba/Nacos/releases</a></p><p>包说明</p><blockquote><ul><li>log           nacos生成日志说明</li><li>bin           nacos服务相关脚本目录，</li><li>conf          nacos的配置文件目录</li><li>target        nacos的启动依赖目录</li><li>data          nacos自带apache-derby数据库，data存放数据内容</li></ul></blockquote><h2 id="3、操作"><a href="#3、操作" class="headerlink" title="3、操作"></a>3、操作</h2><p>终端切换到nacos下的bin目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd bin<br></code></pre></td></tr></table></figure><p>进入解压目录的bin目录下，打开终端，输入命令启动，输出nacos is starting with standalone即为成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh startup.sh -m standalone<br></code></pre></td></tr></table></figure><p>浏览器访问进入可视化页面，账号密码都是nacos，进行登录即可，nacos的端口为8848</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8848</span><span class="hljs-regexp">/nacos/</span><span class="hljs-comment">#/login</span><br></code></pre></td></tr></table></figure><p>关闭nacos</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh shutdown.sh<br></code></pre></td></tr></table></figure><p>但发现关闭后，仍然能在可视化页面连接nacos，所以需要杀死8848端口的进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs //查询8848端口的进程，获取到进程id，例如是62837">lsof -i:8848<br>//杀死62837进程<br>kill -9 62837<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Jdk </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Jdk </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【IDEA】常见问题-解决方案</title>
      <link href="/posts/fdcf83a4.html"/>
      <url>/posts/fdcf83a4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>【IDEA】常见问题-解决方案</p></blockquote><h2 id="1、‘project-JDK-is-not-define‘"><a href="#1、‘project-JDK-is-not-define‘" class="headerlink" title="1、‘project JDK is not define‘"></a>1、‘project JDK is not define‘</h2><p>set JDK</p><h2 id="2、IDEA-version-Control-下没有git菜单"><a href="#2、IDEA-version-Control-下没有git菜单" class="headerlink" title="2、IDEA version Control 下没有git菜单"></a>2、IDEA version Control 下没有git菜单</h2><p>git插件未开启</p><h3 id="3、Mac-上卸载-自带Java？"><a href="#3、Mac-上卸载-自带Java？" class="headerlink" title="3、Mac 上卸载 自带Java？"></a>3、Mac 上卸载 自带Java？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea设置Maven</title>
      <link href="/posts/56a0c2bb.html"/>
      <url>/posts/56a0c2bb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p> Maven版本：3.6.3<br> IDEA版本：2021.3</p></blockquote><h1 id="1、IDEA集成Maven插件"><a href="#1、IDEA集成Maven插件" class="headerlink" title="1、IDEA集成Maven插件"></a>1、IDEA集成Maven插件</h1><h2 id="1、打开设置"><a href="#1、打开设置" class="headerlink" title="1、打开设置"></a>1、打开设置</h2><p>打开 IDEA，进入主界面后点击 Customize，然后点击 All settings<br><img src="https://qiniu.calmchen.com/blog/2022-05-13-idea-maven-1.png" alt="设置"></p><h2 id="2、设置maven"><a href="#2、设置maven" class="headerlink" title="2、设置maven"></a>2、设置maven</h2><p>修改 maven 的路径（使用本地的 Maven），以及修改 settings 文件的位置和本地仓库的位置。。<br><img src="https://qiniu.calmchen.com/blog/2022-05-13-idea-maven-2.png" alt="设置Maven"></p><h2 id="3、推荐配置"><a href="#3、推荐配置" class="headerlink" title="3、推荐配置"></a>3、推荐配置</h2><blockquote><p>设置 maven 在不联网的情况下使用本地插件<br>一般使用 maven 为我们提供好的骨架时，是需要联网的，配置这个，可以在没有网路的情况下，我们可以正常创建工程，并从之前已经使用过的工程中找到相应的骨架。<br>输入内容：-DarchetypeCatalog=internal</p></blockquote><p><img src="https://qiniu.calmchen.com/blog/2022-05-13-idea-maven-3.png" alt="设置Maven"></p><h2 id="4、setting-xml设置"><a href="#4、setting-xml设置" class="headerlink" title="4、setting.xml设置"></a>4、setting.xml设置</h2><h3 id="1、配置阿里云镜像（在setting-xml文件中配置）"><a href="#1、配置阿里云镜像（在setting-xml文件中配置）" class="headerlink" title="1、配置阿里云镜像（在setting.xml文件中配置）"></a>1、配置阿里云镜像（在setting.xml文件中配置）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Maven Repository Switchboard<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>repo2<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repo2.maven.org/maven2/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>ibiblio<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://mirrors.ibiblio.org/pub/mirrors/maven2/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jboss-public-repository-group<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>JBoss Public Repository Group<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repository.jboss.org/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>google-maven-central<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Google Maven Central<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven-central.storage.googleapis.com<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>maven.net.cn<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>oneof the central mirrors in china<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.net.cn/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="2、配置默认-JDK-版本（在-setting-xml-文件中配置）"><a href="#2、配置默认-JDK-版本（在-setting-xml-文件中配置）" class="headerlink" title="2、配置默认 JDK 版本（在 setting.xml 文件中配置）"></a>2、配置默认 JDK 版本（在 setting.xml 文件中配置）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jdk-1.8<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">jdk</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">jdk</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="3、配置-Maven-仓库地址"><a href="#3、配置-Maven-仓库地址" class="headerlink" title="3、配置 Maven 仓库地址"></a>3、配置 Maven 仓库地址</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>/Users/calm/.m2/repository<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> IDEA </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac安装maven</title>
      <link href="/posts/25ff2e8c.html"/>
      <url>/posts/25ff2e8c.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-官网下载-然后解压"><a href="#1-官网下载-然后解压" class="headerlink" title="1.官网下载,然后解压"></a>1.<a href="https://maven.apache.org/download.cgi">官网下载</a>,然后解压</h2><p>推荐<a href="https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/">maven3.6.3</a> 版本 maven的版本太高了 idea会报错</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">java.lang.RuntimeException: org.codehaus.plexus.component.repository.exception.ComponentLookupExcept<br></code></pre></td></tr></table></figure><h2 id="2-解压后的路径"><a href="#2-解压后的路径" class="headerlink" title="2.解压后的路径"></a>2.解压后的路径</h2><p>比如我的是 <strong>/usr/local/maven/apache-maven-3.6.3</strong></p><h2 id="3-打开终端"><a href="#3-打开终端" class="headerlink" title="3.打开终端"></a>3.打开终端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi ~/.bash_profile<br></code></pre></td></tr></table></figure><h2 id="4-添加这两行，并保存"><a href="#4-添加这两行，并保存" class="headerlink" title="4.添加这两行，并保存"></a>4.添加这两行，并保存</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">M2_HOME</span>=/usr/local/maven/apache-maven-3.6.3<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$M2_HOME/bin<br></code></pre></td></tr></table></figure><h2 id="5-终端输入，使配置文件生效"><a href="#5-终端输入，使配置文件生效" class="headerlink" title="5.终端输入，使配置文件生效"></a>5.终端输入，使配置文件生效</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bash_profile<br></code></pre></td></tr></table></figure><h2 id="6-终端输入mvn-v-查看是否安装成功"><a href="#6-终端输入mvn-v-查看是否安装成功" class="headerlink" title="6.终端输入mvn -v 查看是否安装成功"></a>6.终端输入mvn -v 查看是否安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn -v<br></code></pre></td></tr></table></figure><h1 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h1><blockquote><p>1、source <del>/.bash_profile 只能解决一次问题，因为重新打开终端，执行mvn相关命令，依然报错“zsh: command not found: mvn”，需要再执行source ~/.bash_profile才可以<br>原因：zsh的配置文件没有加载</del>/.bash_profile的配置项。<br>解决方法：在zsh的配置文件中添加source ~/.bash_profile配置项的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim ~/.zshrc<br></code></pre></td></tr></table></figure><p>添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bash_profile<br></code></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Mac </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MAC】装机软件</title>
      <link href="/posts/55a24faf.html"/>
      <url>/posts/55a24faf.html</url>
      
        <content type="html"><![CDATA[<h1 id="自用Mac装机软件"><a href="#自用Mac装机软件" class="headerlink" title="自用Mac装机软件"></a>自用Mac装机软件</h1><h2 id="1、App-Store直接下载"><a href="#1、App-Store直接下载" class="headerlink" title="1、App Store直接下载"></a>1、App Store直接下载</h2><ul><li>wechat</li><li>QQ</li><li>钉钉</li><li>Xcode - 软件开发工具</li><li>iPic - Markdown图床工具</li><li>XMind - 思维导图</li></ul><h2 id="2、官网下载"><a href="#2、官网下载" class="headerlink" title="2、官网下载"></a>2、官网下载</h2><ul><li><a href="https://www.google.cn/intl/zh-CN/chrome/">谷歌浏览器</a></li><li><a href="https://pinyin.sogou.com/mac/">搜狗输入法</a></li><li><a href="https://iterm2.com/downloads.html">iterm2</a> - macOS Terminal</li><li><a href="https://www.postman.com/downloads/">Postman</a></li><li><a href="http://www.u.tools/">utools</a> - 新一代效率工具平台</li><li><a href="https://pages.tmall.com/wow/aliyun-market/act/download-mail-client?wh_biz=tm">阿里邮箱</a></li><li><a href="https://paper.meiyuan.in/">Paper</a> - 专为 Mac 设计的壁纸应用</li><li><a href="https://www.docker.com/get-started/">Docker</a></li><li><a href="https://www.notion.so/desktop">Notion</a> - 笔记应用</li><li><a href="https://typoraio.cn/">Typora</a> - Markdowm文本编辑器</li><li><a href="https://www.apifox.cn/">Apifox</a> - API 文档、API 调试、API Mock、API 自动化测试</li><li><a href="https://ezip.awehunt.com/">MacZip</a> - Mac解压缩软件</li></ul><h2 id="3、破解版"><a href="#3、破解版" class="headerlink" title="3、破解版"></a>3、破解版</h2><h3 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h3><blockquote><ul><li><a href="https://macwk.com/">https://macwk.com/</a></li><li><a href="https://xclient.info/">https://xclient.info/</a></li></ul></blockquote><h3 id="常用App"><a href="#常用App" class="headerlink" title="常用App"></a>常用App</h3><ul><li><a href="https://macwk.com/soft/royal-tsx">Royal TSX</a> - Mac远程管理软件</li><li><a href="https://macwk.com/soft/cleanmymac-x">CleanMyMac X</a> - Mac优化清理工具</li><li><a href="https://macwk.com/soft/adobe-acrobat-pro-dc">Adobe Acrobat Pro DC</a> - PDF编辑器</li><li><a href="https://macwk.com/soft/navicat-premium">Navicat Premium</a> - 16.0.12 数据库管理工具</li><li><a href="https://macwk.com/soft/intellij-idea">IntelliJ IDEA</a> - 2021.3 java开发集成环境 破解见IDEA破解</li><li><a href="https://macwk.com/soft/phpstorm">PhpStorm</a> - 2021.3 PHP开发集成环境</li><li><a href="https://www.jetbrains.com/datagrip/download/other.html">DataGrip</a> - 2021.1 SQL数据库管理开发工具</li><li><a href="https://macwk.com/soft/sublime-text">Sublime Text</a> - 代码编辑器 </li><li><a href="https://macwk.com/soft/listen1">Listen1</a> - 2.21.7 付费VIP音乐免费听</li><li><a href="https://macwk.com/soft/redis-desktop-manager">Redis Desktop Manager</a> - 2021.10.236 Redis 数据库管理工具</li><li><a href="https://macwk.com/soft/omnigraffle">OmniGraffle</a> - 7.19.4 图示/图表/流程图等绘制</li><li><a href="https://macwk.com/soft/beyond-compare">Beyond Compare</a> - 4.4.2 文件对比比较</li><li><a href="https://macwk.com/soft/tinycal">小历</a> - 漂亮的状态栏日历</li></ul><h2 id="4、其他"><a href="#4、其他" class="headerlink" title="4、其他"></a>4、其他</h2><h3 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h3><h3 id="php开发环境"><a href="#php开发环境" class="headerlink" title="php开发环境"></a>php开发环境</h3><blockquote><ul><li>docker</li></ul></blockquote><h3 id="java开发环境"><a href="#java开发环境" class="headerlink" title="java开发环境"></a>java开发环境</h3><blockquote><ul><li>idea</li><li>jdk</li><li>maven</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Phpstorm】常用插件</title>
      <link href="/posts/7d64ac6f.html"/>
      <url>/posts/7d64ac6f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、CodeGlance-代码地图"><a href="#1、CodeGlance-代码地图" class="headerlink" title="1、CodeGlance - 代码地图"></a>1、CodeGlance - 代码地图</h2><blockquote><p>代码地图</p></blockquote><h2 id="2、Rainbow-Brackets-彩虹颜色括号"><a href="#2、Rainbow-Brackets-彩虹颜色括号" class="headerlink" title="2、Rainbow Brackets - 彩虹颜色括号"></a>2、Rainbow Brackets - 彩虹颜色括号</h2><blockquote><p>彩虹颜色括号</p></blockquote><h2 id="3、sonarLint-代码质量管理工具"><a href="#3、sonarLint-代码质量管理工具" class="headerlink" title="3、sonarLint - 代码质量管理工具"></a>3、sonarLint - 代码质量管理工具</h2><blockquote><p>代码质量管理工具</p></blockquote><h2 id="4、Laravel-Plugin-代码提示"><a href="#4、Laravel-Plugin-代码提示" class="headerlink" title="4、Laravel Plugin - 代码提示"></a>4、Laravel Plugin - 代码提示</h2><blockquote><p>此插件针对Laravel框架提供controllers,views, routes, configuration, translations等的代码提示功能。</p></blockquote><h2 id="5、Chinese-PHP-Document-php基本函数的中文文档"><a href="#5、Chinese-PHP-Document-php基本函数的中文文档" class="headerlink" title="5、Chinese PHP Document - php基本函数的中文文档"></a>5、Chinese PHP Document - php基本函数的中文文档</h2><blockquote><p>php基本函数的中文文档</p></blockquote><h2 id="6、-env-files-support-env文件"><a href="#6、-env-files-support-env文件" class="headerlink" title="6、.env files support - env文件"></a>6、.env files support - env文件</h2><blockquote><p>可以在env函数使用是提示.env文件中所有的key值的自动完成功能</p></blockquote><h2 id="7、-ignore-高亮GIT忽略文件"><a href="#7、-ignore-高亮GIT忽略文件" class="headerlink" title="7、.ignore - 高亮GIT忽略文件"></a>7、.ignore - 高亮GIT忽略文件</h2><blockquote><p>高亮GIT忽略文件</p></blockquote><h2 id="8、Markdown-support-md文件预览"><a href="#8、Markdown-support-md文件预览" class="headerlink" title="8、Markdown support - md文件预览"></a>8、Markdown support - md文件预览</h2><blockquote><p>在编写.md文件时有预览的功能</p></blockquote><h2 id="9、Thinkphp5-Plugin-tp5"><a href="#9、Thinkphp5-Plugin-tp5" class="headerlink" title="9、Thinkphp5 Plugin - tp5"></a>9、Thinkphp5 Plugin - tp5</h2><blockquote><p>用于thinkphp5.0的视图,配置,路由,数据库,模型智能提示和跳转(快捷键Ctrl+B),及模型函数(model)返回类型分析</p></blockquote><h2 id="10、BashSupport-sh脚本"><a href="#10、BashSupport-sh脚本" class="headerlink" title="10、BashSupport - .sh脚本"></a>10、BashSupport - .sh脚本</h2><blockquote><p>可以书写.sh脚本，且同样可以在书写时有对应的语法提示功能</p></blockquote><h2 id="11、power-mode-II-代码动效"><a href="#11、power-mode-II-代码动效" class="headerlink" title="11、power-mode II - 代码动效"></a>11、power-mode II - 代码动效</h2><blockquote><p>写代码动效</p></blockquote><h2 id="12、Material-Theme-UI-UI主题"><a href="#12、Material-Theme-UI-UI主题" class="headerlink" title="12、Material Theme UI - UI主题"></a>12、Material Theme UI - UI主题</h2><blockquote><p>UI主题插件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> phpstorm </category>
          
          <category> 插件 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> PHP </tag>
            
            <tag> phpstorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo】常用插件</title>
      <link href="/posts/468ec796.html"/>
      <url>/posts/468ec796.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、hexo-deployer-git"><a href="#1、hexo-deployer-git" class="headerlink" title="1、hexo-deployer-git"></a>1、hexo-deployer-git</h2><p> <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a><br>Hexo 支持一键部署网站到 git 仓库上，其他的一键部署方式参考 <a href="https://hexo.io/zh-cn/docs/one-command-deployment">官网介绍</a></p><ul><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li>配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:calmzo/calmzo.github.io.git</span> <span class="hljs-comment"># &lt;仓库链接&gt; # 可以是 https 链接也可以是 git 链接</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span> <span class="hljs-comment"># [分支] # GitHub 的网站分支为 gh-pages，其他网站可能有所不同</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">git@gitee.com:Calm-Chan/Calm-Chan.git</span> <span class="hljs-comment"># &lt;仓库链接&gt; # 可以是 https 链接也可以是 git 链接</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span> <span class="hljs-comment"># [分支] # GitHub 的网站分支为 gh-pages，其他网站可能有所不同</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="2、生成非中文的链接"><a href="#2、生成非中文的链接" class="headerlink" title="2、生成非中文的链接"></a>2、生成非中文的链接</h2><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-abbrlink --save<br></code></pre></td></tr></table></figure><ul><li>配置<br>首先修改 _config.yml 文件中的 permalink 的配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># abbrlink config</span><br><span class="hljs-comment">## https://github.com/rozbo/hexo-abbrlink</span><br><span class="hljs-attr">abbrlink:</span><br>  <span class="hljs-attr">alg:</span> <span class="hljs-string">crc32</span> <span class="hljs-comment"># support crc16(default) and crc32</span><br>  <span class="hljs-attr">rep:</span> <span class="hljs-string">hex</span> <span class="hljs-comment"># support dec(default) and hex</span><br>  <span class="hljs-attr">drafts:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># (true)Process draft,(false)Do not process draft. false(default)</span><br>  <span class="hljs-comment"># Generate categories from directory-tree</span><br>  <span class="hljs-comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br>  <span class="hljs-attr">auto_category:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true(default)</span><br>    <span class="hljs-attr">depth:</span> <span class="hljs-number">3</span> <span class="hljs-comment"># 3(default)</span><br>    <span class="hljs-attr">over_write:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">auto_title:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># enable auto title, it can auto fill the title by path</span><br>  <span class="hljs-attr">auto_date:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># enable auto date, it can auto fill the date by time today</span><br>  <span class="hljs-attr">force:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># enable force mode, in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.</span><br></code></pre></td></tr></table></figure><h2 id="3、收录"><a href="#3、收录" class="headerlink" title="3、收录"></a>3、收录</h2><p><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a><br>为了使博客能被谷歌、bing、百度收录，最好生成 sitemap 方便爬取，整体流程可以先参考<a href="https://ywang-wnlo.github.io/posts/abac0c46.html">这篇博文</a></p><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-generator-sitemap --save<br></code></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-generator-sitemap</span><br><span class="hljs-comment">## https://github.com/hexojs/hexo-generator-sitemap</span><br><span class="hljs-attr">sitemap:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">sitemap.xml</span><br>  <span class="hljs-comment"># template: ./sitemap_template.xml</span><br>  <span class="hljs-attr">rel:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">categories:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="4、hexo-filter-github-emojis"><a href="#4、hexo-filter-github-emojis" class="headerlink" title="4、hexo-filter-github-emojis"></a>4、hexo-filter-github-emojis</h2><p><a href="https://npmmirror.com/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a></p><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-filter-emoji<br></code></pre></td></tr></table></figure></li><li><p>配置<br>在站点配置文件 .config.yml 中增加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">emoji:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">className:</span> <span class="hljs-string">github-emoji</span><br>  <span class="hljs-attr">inject:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">styles:</span><br>  <span class="hljs-attr">customEmojis:</span><br></code></pre></td></tr></table></figure></li><li><p>使用方法<br>输入对应的 emoji 编码就行了，这个是两种方法都通用的<br>例如：输入笑脸对应的 emoji 编码 <strong>: smile :</strong> 就可以得到 <span class="github-emoji" alias="smile" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span></p></li><li><p>方法二额外的用法：<br>如果你不喜欢 :: 这种方法，你还可以这样采用 tags 的方式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;% emoji sparkles %&#125;<br></code></pre></td></tr></table></figure><p>为了避免有时候 :: 带来的解析问题，我们可以在 front-matter 中添加 no-emoji: true 来禁用 :: 的方式：</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">---<br>title: Hello World<br>no-emoji: true<br>---<br><span class="github-emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">&#x1f389;</span> as it is.<br>&#123;% emoji tada %&#125; still works.<br><br></code></pre></td></tr></table></figure><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">编码合集</a></p><ul><li>参考资料：<br><a href="https://blog.juanertu.com/archives/f36eea83.html">Hexo 中使用 emoji 表情</a></li></ul><h2 id="5、添加-RSS-订阅支持"><a href="#5、添加-RSS-订阅支持" class="headerlink" title="5、添加 RSS 订阅支持"></a>5、添加 RSS 订阅支持</h2><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></p><ul><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-generator-feed --save<br></code></pre></td></tr></table></figure></li><li>配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 添加 RSS 订阅支持（可选的）</span><br><span class="hljs-attr">feed:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span><br>  <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span><br>  <span class="hljs-attr">hub:</span><br>  <span class="hljs-attr">content:</span><br>  <span class="hljs-attr">content_limit:</span> <span class="hljs-number">140</span><br>  <span class="hljs-attr">content_limit_delim:</span> <span class="hljs-string">&#x27; &#x27;</span><br>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用插件</title>
      <link href="/posts/bc84784b.html"/>
      <url>/posts/bc84784b.html</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="IntelliJ-idea-必备-好用-优秀-插件"><a href="#IntelliJ-idea-必备-好用-优秀-插件" class="headerlink" title="IntelliJ idea 必备 好用 优秀 插件"></a>IntelliJ idea 必备 好用 优秀 插件</h2></blockquote><h2 id="1、Translation-必备翻译插件"><a href="#1、Translation-必备翻译插件" class="headerlink" title="1、Translation - 必备翻译插件"></a>1、Translation - 必备翻译插件</h2><blockquote><p>基于 IntelliJ 的 IDE 的翻译插件</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/8579-translation">https://plugins.jetbrains.com/plugin/8579-translation</a></p><h2 id="2、Maven-Search-Maven搜索"><a href="#2、Maven-Search-Maven搜索" class="headerlink" title="2、Maven Search - Maven搜索"></a>2、Maven Search - Maven搜索</h2><blockquote><p>Maven 依赖项搜索</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/17170-maven-search">https://plugins.jetbrains.com/plugin/17170-maven-search</a></p><h2 id="3、Alibaba-Java-Coding-Guidelines-阿里巴巴-Java-代码规范"><a href="#3、Alibaba-Java-Coding-Guidelines-阿里巴巴-Java-代码规范" class="headerlink" title="3、Alibaba Java Coding Guidelines - 阿里巴巴 Java 代码规范"></a>3、Alibaba Java Coding Guidelines - 阿里巴巴 Java 代码规范</h2><blockquote><p>阿里巴巴代码规范插件，检查你的代码规范。</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines">https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines</a></p><h2 id="4、GitToolBox-git版本提交"><a href="#4、GitToolBox-git版本提交" class="headerlink" title="4、GitToolBox - git版本提交"></a>4、GitToolBox - git版本提交</h2><blockquote><p>他能在项目上提示你还有多少文件没提交，远程还有多少文件没更新下来。还能在每一行代码上提示上次提交的时间。查版本提交问题的时候尤其方便</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><h2 id="5、Atom-Material-ICons-优化idea流畅度"><a href="#5、Atom-Material-ICons-优化idea流畅度" class="headerlink" title="5、Atom Material ICons - 优化idea流畅度"></a>5、Atom Material ICons - 优化idea流畅度</h2><blockquote><p>这是一个icon图片插件，有一个特别牛的功能就是 可以优化idea流畅度，不知道是什么原理，现在这个插件成为了我必备插件</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><h2 id="6、Monokai-Pro-Theme-主题插件"><a href="#6、Monokai-Pro-Theme-主题插件" class="headerlink" title="6、Monokai Pro Theme - 主题插件"></a>6、Monokai Pro Theme - 主题插件</h2><blockquote><p>主题插件，最喜欢的一款主题</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><h2 id="7、Background-Image-Plus-设置背景（2020-1以上版本内置）"><a href="#7、Background-Image-Plus-设置背景（2020-1以上版本内置）" class="headerlink" title="7、Background Image Plus - 设置背景（2020.1以上版本内置）"></a>7、Background Image Plus - 设置背景（2020.1以上版本内置）</h2><blockquote><p>这款插件并不能直接提高你的开发效率，但是可以让你面对的IDE不再单调，当把背景设置成你自己心仪的的图片</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><h2 id="8、POJO-to-Json-对象-JSON转换"><a href="#8、POJO-to-Json-对象-JSON转换" class="headerlink" title="8、POJO to Json - 对象/JSON转换"></a>8、POJO to Json - 对象/JSON转换</h2><blockquote><p>一个简单的Java bean转JSON插件</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/12066-pojo-to-json">https://plugins.jetbrains.com/plugin/12066-pojo-to-json</a></p><h2 id="9、Free-Mybatis-plugin-免费的Mybatis插件"><a href="#9、Free-Mybatis-plugin-免费的Mybatis插件" class="headerlink" title="9、Free Mybatis plugin - 免费的Mybatis插件"></a>9、Free Mybatis plugin - 免费的Mybatis插件</h2><blockquote><p>免费的Mybatis插件</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin">https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin</a></p><p>free-idea-mybatis是一款增强idea对mybatis支持的插件，主要功能如下：</p><blockquote><ul><li>生成mapper xml文件</li><li>快速从代码跳转到mapper及从mapper返回代码</li><li>mybatis自动补全及语法错误提示</li><li>集成mybatis generator gui界面</li><li>根据数据库注解，生成swagger model注解</li><li>image-20210722103624389</li></ul></blockquote><h2 id="10、SequenceDiagram-时序图"><a href="#10、SequenceDiagram-时序图" class="headerlink" title="10、SequenceDiagram - 时序图"></a>10、SequenceDiagram - 时序图</h2><blockquote><p>生成调用链路时序图</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/8286-sequencediagram">https://plugins.jetbrains.com/plugin/8286-sequencediagram</a></p><h2 id="11、Codota-代码智能提示"><a href="#11、Codota-代码智能提示" class="headerlink" title="11、Codota - 代码智能提示"></a>11、Codota - 代码智能提示</h2><blockquote><p>直接在 IntelliJ、Android Studio 或 Eclipse 中使用从数百万个程序中学习的代码完成，更快、更智能地编写代码。</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><p>插件链接：<a href="https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript">https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript</a></p><h2 id="12、CamelCase-驼峰命名法"><a href="#12、CamelCase-驼峰命名法" class="headerlink" title="12、CamelCase - 驼峰命名法"></a>12、CamelCase - 驼峰命名法</h2><blockquote><p>从数据库直接复制字段名，然后SHIFT + ALT + U转换成驼峰</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><br>插件链接：<a href="https://plugins.jetbrains.com/plugin/7160-camelcase">https://plugins.jetbrains.com/plugin/7160-camelcase</a></p><h2 id="13、Rainbow-Brackets-彩虹括号"><a href="#13、Rainbow-Brackets-彩虹括号" class="headerlink" title="13、Rainbow Brackets - 彩虹括号"></a>13、Rainbow Brackets - 彩虹括号</h2><blockquote><p>防止括号太多眼睛看不过来</p></blockquote><p>推荐指数：<span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></p><p>插件链接：<a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets">https://plugins.jetbrains.com/plugin/10080-rainbow-brackets</a></p><h1 id="转载链接"><a href="#转载链接" class="headerlink" title="转载链接"></a>转载链接</h1><ul><li><a href="https://www.cnblogs.com/lvbok/p/idea_plugin.html">IDEA常用插件推荐</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
          <category> 插件 </category>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> JAVA </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA基本设置</title>
      <link href="/posts/4c38ef0c.html"/>
      <url>/posts/4c38ef0c.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、字体主题设置"><a href="#1、字体主题设置" class="headerlink" title="1、字体主题设置"></a>1、字体主题设置</h2><p>选择 File – settings – Editor – Font  按照自己喜好设置</p><ul><li><p>编辑区字体设置<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-editor-font.png" alt="编辑区字体设置"></p></li><li><p>工作区区字体设置<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-behavior-theme.png" alt="工作区区字体设置"></p></li></ul><h2 id="2、编码格式"><a href="#2、编码格式" class="headerlink" title="2、编码格式"></a>2、编码格式</h2><p>在开发中，我们常设置编码格式为UTF-8<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea1.png" alt="编码格式设置"><br>由上到下需要配置编码的地方有四处：</p><blockquote><ul><li>Global Encoding：全局编码</li><li>Project Encoding ：项目编码</li><li>Encoding：源码目录编码</li><li>Default encoding for properties files：.properties文件编码</li></ul></blockquote><h2 id="3、方法分割线"><a href="#3、方法分割线" class="headerlink" title="3、方法分割线"></a>3、方法分割线</h2><p>勾选 Show method separators 选项即可<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-031119.png" alt="方法分割线设置"></p><h2 id="4、方法参数提示"><a href="#4、方法参数提示" class="headerlink" title="4、方法参数提示"></a>4、方法参数提示</h2><p>勾选图中三项即可<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-031423.png" alt="方法参数提示"></p><p>共有三个选项：</p><blockquote><ul><li>Show parameter name hints on completion：填写参数后显示其信息</li><li>Show the parameter info popup in 1000 ms：选择要调用的方法后在一秒内弹出参数信息</li><li>Show full method signatures：显示完整的方法签名</li></ul></blockquote><h2 id="5、鼠标悬停显示其文档信息（即悬停提示）"><a href="#5、鼠标悬停显示其文档信息（即悬停提示）" class="headerlink" title="5、鼠标悬停显示其文档信息（即悬停提示）"></a>5、鼠标悬停显示其文档信息（即悬停提示）</h2><p><img src="https://qiniu.calmchen.com/blog/2022-05-07-031635.png" alt="悬停提示"><br>勾选 Show quick documentation on mouse move 选项</p><h2 id="6、添加代码作者以及日期信息"><a href="#6、添加代码作者以及日期信息" class="headerlink" title="6、添加代码作者以及日期信息"></a>6、添加代码作者以及日期信息</h2><p><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-codetemplates-fileheader.png" alt="添加代码作者以及日期信息"></p><h2 id="7、设置导航栏不折叠类名（当类名过多时）"><a href="#7、设置导航栏不折叠类名（当类名过多时）" class="headerlink" title="7、设置导航栏不折叠类名（当类名过多时）"></a>7、设置导航栏不折叠类名（当类名过多时）</h2><p>勾选图中选项即可<br>此处有两个选项：<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-showtabs.png" alt="设置导航栏不折叠类名"><br>Show pinned tabs in a separate row：在单独的行中显示固定标签（即显示右上角 × 号）<br>同时设置标签的个数（此版本默认为10）</p><h2 id="8、通过鼠标滚轮调整字体大小"><a href="#8、通过鼠标滚轮调整字体大小" class="headerlink" title="8、通过鼠标滚轮调整字体大小"></a>8、通过鼠标滚轮调整字体大小</h2><p>勾选 Change font size with Ctrl+Mouse Wheel 选项<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-mousecontrol.png" alt="鼠标滚轮调整字体大小"></p><h2 id="9、自动导包"><a href="#9、自动导包" class="headerlink" title="9、自动导包"></a>9、自动导包</h2><p>选择并勾选图中选项<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-autoimport.png" alt="自动导包"><br>其中有两个选项需要我们勾选：</p><blockquote><ul><li>Add unambiguous imports on the fly：动态添加明确的导入</li><li>Optimize imprts and compltetion：动态优化导入（即删除无用导入）</li></ul></blockquote><h2 id="10、忽略大小写"><a href="#10、忽略大小写" class="headerlink" title="10、忽略大小写"></a>10、忽略大小写</h2><p>取消 Match case 选项<br><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-matchcase.png" alt="忽略大小写"><br>如果忽略大小写，则当我们输入“stringbuffer”时IDEA也会给予提示<br>如果我们不忽略大小写，则我们只能通过输入“StringBuffer”来获得提示</p><p>此处有三个选项：</p><blockquote><ul><li>Match case：匹配大小写</li><li>First letter only：首字母映照</li><li>All letters：字母全拼</li></ul></blockquote><h2 id="11、自动编译"><a href="#11、自动编译" class="headerlink" title="11、自动编译"></a>11、自动编译</h2><p>暂无</p><h2 id="12、关闭自动更新"><a href="#12、关闭自动更新" class="headerlink" title="12、关闭自动更新"></a>12、关闭自动更新</h2><p><img src="https://qiniu.calmchen.com/blog/2022-05-07-idea-check-ide-updates.png" alt="关闭自动更新"><br>取消勾选 Check IDE updates for Stable Releases 选项</p><h1 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h1><p><a href="https://blog.csdn.net/weixin_54886569/article/details/119114894?spm=1001.2014.3001.5506">IDEA的基本设置（基于2021.1.2版本）</a></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
          <category> JAVA </category>
          
          <category> JetBrains </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> JAVA </tag>
            
            <tag> JetBrains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JetBrains下载</title>
      <link href="/posts/7076a5ae.html"/>
      <url>/posts/7076a5ae.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h1><p>v2021.2.2之后版本需要登录账号才能免费试用，推荐下载<strong>2021.2.2</strong>版本</p><ul><li><a href="https://www.jetbrains.com/idea/download/other.html">idea下载链接</a></li></ul><h2 id="1、如何安装"><a href="#1、如何安装" class="headerlink" title="1、如何安装"></a>1、如何安装</h2><p>提供以下两种方法，二选一即可。</p><h3 id="1、插件市场安装："><a href="#1、插件市场安装：" class="headerlink" title="1、插件市场安装："></a>1、插件市场安装：</h3><p>在 Settings/Preferences… -&gt; Plugins -&gt; 点击齿轮，选择第一个手动添加第三方插件仓库地址：<a href="https://plugins.zhile.io/">https://plugins.zhile.io</a> 搜索：IDE Eval Reset 插件进行安装。</p><h3 id="2、手动下载安装："><a href="#2、手动下载安装：" class="headerlink" title="2、手动下载安装："></a>2、手动下载安装：</h3><p><a href="https://macwk.lanzoui.com/iwY9lvf1ckj">点击这个链接(v2.1.14)下载插件的 zip 包</a> (macOS可能会自动解压，切记使用的是 zip 包，不是解压后的文件夹！），然后打开 Settings/Preferences… -&gt; Plugins 手动安装插件。</p><h2 id="2、如何使用"><a href="#2、如何使用" class="headerlink" title="2、如何使用"></a>2、如何使用</h2><p>一般来说，在 IDE 窗口切出去或切回来时（窗口失去/得到焦点）会触发事件，检测是否长时间（25天）没有重置，给通知让你选择。（初次安装因为无法获取上次重置时间，会直接给予提示）。</p><p>您也可以手动唤出插件的主界面：</p><p>a. 如果 IDE 没有打开项目，在 Welcome 界面点击 IDE 的菜单：Get Help -&gt; Eval Reset</p><p>b. 如果 IDE 打开了项目，点击 IDE 的菜单：Help -&gt; Eval Reset</p><p>唤出的插件主界面中包含了一些显示信息，有 2 个按钮和 1 个勾选项：</p><p>按钮：Reload 用来刷新界面上的显示信息。<br>按钮：Reset 点击会询问是否重置试用信息并重启 IDE。选择 Yes 则执行重置操作并重启 IDE 生效，选择 No 则什么也不做。（此为手动重置方式）<br>勾选项：Auto reset before per restart 如果勾选了，则自勾选后每次重启/退出 IDE 时会自动重置试用信息，你无需做额外的事情。（此为自动重置方式，推荐此方法！）</p><h2 id="3、如何更新"><a href="#3、如何更新" class="headerlink" title="3、如何更新"></a>3、如何更新</h2><h3 id="1、插件更新机制（推荐）："><a href="#1、插件更新机制（推荐）：" class="headerlink" title="1、插件更新机制（推荐）："></a>1、插件更新机制（推荐）：</h3><p>IDE 会自行检测其自身和所安装插件的更新并给予提示。如果本插件有更新，你会收到提示看到更新日志，自行选择是否更新。</p><p>点击 IDE 的 Check for Updates… 菜单手动检测 IDE 和所安装插件的更新。如果本插件有更新，你会收到提示看到更新日志，自行选择是否更新。</p><p>插件更新可能会需要重启IDE。</p><h3 id="2、手动更新："><a href="#2、手动更新：" class="headerlink" title="2、手动更新："></a>2、手动更新：</h3><p>从本页面下载最新的插件 zip 包安装更新。插件更新需要重启IDE。</p><h1 id="参考转载链接"><a href="#参考转载链接" class="headerlink" title="参考转载链接"></a>参考转载链接</h1><p><a href="https://www.macwk.com/article/jetbrains-crack">JetBrains全系列软件激活</a></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
          <category> JetBrains </category>
          
          <category> 激活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> JetBrains </tag>
            
            <tag> 激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/posts/5d36ff15.html"/>
      <url>/posts/5d36ff15.html</url>
      
        <content type="html"><![CDATA[<h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><p>几乎所有Markdown应用程序都支持John Gruber原始设计文档中概述的基本语法。Markdown处理器之间存在细微的差异和差异-尽可能在线内注明。</p><p>注意：使用Markdown并不意味着您也不能使用HTML。您可以将HTML标签添加到任何Markdown文件中。如果您更喜欢某些HTML标记而不是Markdown语法，这将很有帮助。例如，有些人发现将HTML标签用于图像更容易。</p><h2 id="1、标题"><a href="#1、标题" class="headerlink" title="1、标题"></a>1、标题</h2><p>要创建标题，请<code>#</code>在单词或短语的前面添加数字符号（）。您使用的数字符号的数量应与标题级别相对应。例如，要创建标题级别三（<code>&lt;h3&gt;</code>），请使用三个数字符号（例如<code>### My Header</code>）。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code># Heading level 1</code></td><td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td><td>标题等级1</td></tr><tr><td><code>## Heading level 2</code></td><td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td><td>标题等级2</td></tr><tr><td><code>### Heading level 3</code></td><td><code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code></td><td>标题级别3</td></tr><tr><td><code>#### Heading level 4</code></td><td><code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code></td><td>标题级别4</td></tr><tr><td><code>##### Heading level 5</code></td><td><code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code></td><td>标题5</td></tr><tr><td><code>###### Heading level 6</code></td><td><code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code></td><td>标题等级6</td></tr></tbody></table><h3 id="替代语法"><a href="#替代语法" class="headerlink" title="替代语法"></a>替代语法</h3><p>或者，在文本下方的行上，添加任意数量的<code>==</code>标题级别1的<code>--</code>字符或标题级别2的字符。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>Heading level 1===============</code></td><td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td><td>标题等级1</td></tr><tr><td><code>Heading level 2---------------</code></td><td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td><td>标题等级2</td></tr></tbody></table><h2 id="2、段落"><a href="#2、段落" class="headerlink" title="2、段落"></a>2、段落</h2><p>要创建段落，请使用空白行分隔一行或多行文本。您不应缩进带有空格或制表符的段落。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>I really like using Markdown.I think I&#39;ll use it to format all of my documents from now on.</code></td><td><code>&lt;p&gt;I really like using Markdown.&lt;/p&gt;&lt;p&gt;I think I&#39;ll use it to format all of my documents from now on.&lt;/p&gt;</code></td><td>我真的很喜欢使用Markdown。我想从现在开始，我将使用它来格式化所有文档。</td></tr></tbody></table><h2 id="3、换行"><a href="#3、换行" class="headerlink" title="3、换行"></a>3、换行</h2><p>要创建换行符（<code>&lt;br&gt;</code>），请以两个或多个空格结束一行，然后键入return。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>This is the first line.  And this is the second line.</code></td><td><code>&lt;p&gt;This is the first line.&lt;br&gt;And this is the second line.&lt;/p&gt;</code></td><td>这是第一行。 这是第二行。</td></tr></tbody></table><h2 id="4、着重"><a href="#4、着重" class="headerlink" title="4、着重"></a>4、着重</h2><p>您可以通过使文本变为粗体或斜体来增加着重。</p><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>要加粗文本，请在单词或短语的前后添加两个星号或下划线。要加粗一个单词的中部以强调，请在字母周围添加两个星号，且各空格之间不加空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>I just love **bold text**.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>我只喜欢<strong>粗体字</strong>。</td></tr><tr><td><code>I just love __bold text__.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>我只喜欢<strong>粗体字</strong>。</td></tr><tr><td><code>Love**is**bold</code></td><td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td><td>爱<strong>是</strong>大胆的</td></tr></tbody></table><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>要斜体显示文本，请在单词或短语的前后添加一个星号或下划线。要斜体突出单词的中间部分，请在字母周围添加一个星号，中间不要带空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>Italicized text is the *cat&#39;s meow*.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>斜体文字是<em>猫的叫声</em>。</td></tr><tr><td><code>Italicized text is the _cat&#39;s meow_.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>斜体文字是<em>猫的叫声</em>。</td></tr><tr><td><code>A*cat*meow</code></td><td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td><td>一个<em>猫</em>喵</td></tr></tbody></table><h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><p>要同时突出显示带有粗体和斜体的文本，请在单词或短语的前后添加三个星号或下划线。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>This text is ***really important***.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>这段文字***真的很重要***。</td></tr><tr><td><code>This text is ___really important___.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>这段文字***真的很重要***。</td></tr><tr><td><code>This text is __*really important*__.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>这段文字***真的很重要***。</td></tr><tr><td><code>This text is **_really important_**.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>这段文字***真的很重要***。</td></tr></tbody></table><h2 id="5、块引用"><a href="#5、块引用" class="headerlink" title="5、块引用"></a>5、块引用</h2><p>要创建blockquote，请<code>&gt;</code>在段落前面添加一个。</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Dorothy</span> followed her through many <span class="hljs-keyword">of</span> the beautiful rooms <span class="hljs-keyword">in</span> her castle.</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><blockquote><p>桃乐丝（Dorothy）跟着她走过了她城堡中许多美丽的房间。</p></blockquote><h3 id="具有多个段落的块引用"><a href="#具有多个段落的块引用" class="headerlink" title="具有多个段落的块引用"></a>具有多个段落的块引用</h3><p>块引用可以包含多个段落。<code>&gt;</code>在段落之间的空白行上添加一个。</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Dorothy</span> followed her through many <span class="hljs-keyword">of</span> the beautiful rooms <span class="hljs-keyword">in</span> her castle.</span><br><span class="hljs-meta prompt_">&gt;</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">The</span> <span class="hljs-title class_">Witch</span> bade her clean the pots and kettles and sweep the floor and keep the fire fed <span class="hljs-keyword">with</span> wood.</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><blockquote><p>桃乐丝（Dorothy）跟着她走过了她城堡中许多美丽的房间。</p><p>女巫请她清洗锅碗瓢盆，扫地，并用木柴取火。</p></blockquote><h3 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h3><p>块引用可以嵌套。<code>&gt;&gt;</code>在要嵌套的段落前面添加一个。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">&gt; Dorothy followed her through many of the <span class="hljs-keyword">beautiful </span>rooms in her castle.<br>&gt;<br>&gt;&gt; The Witch <span class="hljs-keyword">bade </span>her clean the pots <span class="hljs-keyword">and </span>kettles <span class="hljs-keyword">and </span><span class="hljs-keyword">sweep </span>the floor <span class="hljs-keyword">and </span>keep the fire fed with wood.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><blockquote><p>桃乐丝（Dorothy）跟着她走过了她城堡中许多美丽的房间。</p><blockquote><p>女巫请她清洗锅碗瓢盆，扫地，并用木柴取火。</p></blockquote></blockquote><h3 id="具有其他元素的块引用"><a href="#具有其他元素的块引用" class="headerlink" title="具有其他元素的块引用"></a>具有其他元素的块引用</h3><p>块引用可以包含其他Markdown格式的元素。并非所有元素都可以使用-您需要进行实验以查看哪些元素有效。</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">#### <span class="hljs-title class_">The</span> quarterly results look great!</span><br><span class="hljs-meta prompt_">&gt;</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">- <span class="hljs-title class_">Revenue</span> was off the chart.</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">- <span class="hljs-title class_">Profits</span> were higher than ever.</span><br><span class="hljs-meta prompt_">&gt;</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"> *<span class="hljs-title class_">Everything</span>* is going according to **plan**.</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><blockquote><h4 id="季度业绩看起来不错！"><a href="#季度业绩看起来不错！" class="headerlink" title="季度业绩看起来不错！"></a>季度业绩看起来不错！</h4><ul><li>收入超出了预期。</li><li>利润比以往任何时候都高。</li></ul><p><em>一切</em>都按<strong>计划进行</strong>。</p></blockquote><h2 id="6、清单"><a href="#6、清单" class="headerlink" title="6、清单"></a>6、清单</h2><p>您可以将项目组织成有序和无序列表。</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>要创建有序列表，请在订单项中添加数字和句点。数字不必按数字顺序排列，但列表应以数字开头。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>1. First item2. Second item3. Third item4. Fourth item</code></td><td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>1. First item1. Second item1. Third item1. Fourth item</code></td><td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>1. First item8. Second item3. Third item5. Fourth item</code></td><td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>1. First item2. Second item3. Third item  1. Indented item  2. Indented item4. Fourth item</code></td><td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;ol&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>第一项第二项第三项缩进项缩进项第四项</td></tr></tbody></table><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>要创建无序列表，请在订单项前添加破折号（<code>-</code>），星号（<code>*</code>）或加号（<code>+</code>）。缩进一个或多个项目以创建嵌套列表。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>- First item- Second item- Third item- Fourth item</code></td><td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>* First item* Second item* Third item* Fourth item</code></td><td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>+ First item* Second item- Third item+ Fourth item</code></td><td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>第一项第二项第三项第四项</td></tr><tr><td><code>- First item- Second item- Third item  - Indented item  - Indented item- Fourth item</code></td><td><code>&lt;ul&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;ul&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;li&gt;Indented item&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>第一项第二项第三项缩进项缩进项第四项</td></tr></tbody></table><h3 id="在列表中添加元素"><a href="#在列表中添加元素" class="headerlink" title="在列表中添加元素"></a>在列表中添加元素</h3><p>要在保留列表连续性的同时在列表中添加另一个元素，请将该元素缩进四个空格或一个制表符，如以下示例所示。</p><h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">*   This <span class="hljs-keyword">is</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">first</span> <span class="hljs-built_in">list</span> <span class="hljs-built_in">item</span>.<br>*   Here&#x27;s <span class="hljs-keyword">the</span> <span class="hljs-keyword">second</span> <span class="hljs-built_in">list</span> <span class="hljs-built_in">item</span>.<br><br>    I need <span class="hljs-keyword">to</span> add another <span class="hljs-built_in">paragraph</span> <span class="hljs-keyword">below</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">second</span> <span class="hljs-built_in">list</span> <span class="hljs-built_in">item</span>.<br><br>*   And here&#x27;s <span class="hljs-keyword">the</span> <span class="hljs-keyword">third</span> <span class="hljs-built_in">list</span> <span class="hljs-built_in">item</span>.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><ul><li><p>这是第一个列表项。</p></li><li><p>这是第二个列表项。</p><p>我需要在第二个列表项下面添加另一段。</p></li><li><p>这是第三个列表项。</p></li></ul><h4 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">*   This <span class="hljs-keyword">is</span> the first list item.<br>*   Her<span class="hljs-string">e&#x27;s the second list item.</span><br><span class="hljs-string"></span><br><span class="hljs-string">    &gt; A blockquote would look great below the second list item.</span><br><span class="hljs-string"></span><br><span class="hljs-string">*   And here&#x27;</span>s the third list item.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><ul><li><p>这是第一个列表项。</p></li><li><p>这是第二个列表项。</p><blockquote><p>在第二个列表项的下方，blockquote看起来不错。</p></blockquote></li><li><p>这是第三个列表项。</p></li></ul><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p><a href="http://markdown.p2hp.com/basic-syntax/index.html#code-blocks">代码块</a>通常缩进四个空格或一个制表符。当它们在列表中时，将它们缩进八个空格或两个选项卡。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-number">1</span>.  Open the <span class="hljs-keyword">file</span>.<br><span class="hljs-number">2</span>.  Find the following code block <span class="hljs-keyword">on</span> <span class="hljs-built_in">line</span> <span class="hljs-number">21</span>:<br><br>        <span class="hljs-symbol">&lt;html&gt;</span><br>          <span class="hljs-symbol">&lt;head&gt;</span><br>            <span class="hljs-symbol">&lt;title&gt;</span>Test&lt;/title&gt;<br>          &lt;/head&gt;<br><br><span class="hljs-number">3</span>.  Update the title <span class="hljs-keyword">to</span> <span class="hljs-keyword">match</span> the name of your website.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><ol><li><p>打开文件。</p></li><li><p>在第21行找到以下代码块：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Test<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>更新标题以匹配您的网站名称。</p></li></ol><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-number">1.</span>  Open <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> containing <span class="hljs-keyword">the</span> Linux mascot.<br><span class="hljs-number">2.</span>  Marvel <span class="hljs-keyword">at</span> its beauty.<br><br>    ![Tux, <span class="hljs-keyword">the</span> Linux mascot](/assets/images/tux.png)<br><br><span class="hljs-number">3.</span>  Close <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span>.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><ol><li><p>打开包含Linux吉祥物的文件。</p></li><li><p>惊叹于它的美丽。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/e7ed9fe4bafe46e275c807d63591f85f9ab246ba/e2d28/assets/images/tux.png" alt="Tux，Linux吉祥物"></p></li><li><p>关闭文件。</p></li></ol><h2 id="7、代码"><a href="#7、代码" class="headerlink" title="7、代码"></a>7、代码</h2><p>要将单词或短语表示为代码，请将其括在勾号（```）中。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>At the command prompt, type </code>nano<code>.</code></td><td><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td><td>在命令提示符下，键入<code>nano</code>。</td></tr></tbody></table><h3 id="转义刻度线"><a href="#转义刻度线" class="headerlink" title="转义刻度线"></a>转义刻度线</h3><p>如果要表示为代码的单词或短语包含一个或多个刻度线，可以通过将单词或短语括在双刻度线（````）中来对其进行转义。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染输出</th></tr></thead><tbody><tr><td><code>Use `code` in your Markdown file.</code></td><td><code>&lt;code&gt;Use </code>code<code> in your Markdown file.&lt;/code&gt;</code></td><td><code>Use </code>code<code> in your Markdown file.</code></td></tr></tbody></table><h3 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h3><p>要创建代码块，请在代码块的每一行缩进至少四个空格或一个制表符。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;html&gt;</span><br>  <span class="hljs-section">&lt;head&gt;</span><br>  <span class="hljs-section">&lt;/head&gt;</span><br><span class="hljs-section">&lt;/html&gt;</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;html&gt;</span><br>  <span class="hljs-section">&lt;head&gt;</span><br>  <span class="hljs-section">&lt;/head&gt;</span><br><span class="hljs-section">&lt;/html&gt;</span><br></code></pre></td></tr></table></figure><p> <strong>注意：</strong>要创建没有缩进线的<a href="http://markdown.p2hp.com/extended-syntax/index.html#fenced-code-blocks">代码块</a>，请使用<a href="http://markdown.p2hp.com/extended-syntax/index.html#fenced-code-blocks">围栅代码块</a>。</p><h2 id="8、水平线"><a href="#8、水平线" class="headerlink" title="8、水平线"></a>8、水平线</h2><p>要创建水平线<code>***</code>，请单独在一行上使用三个或更多的星号（），破折号（<code>---</code>）或下划线（<code>___</code>）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">***</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">_________________</span><br></code></pre></td></tr></table></figure><p>所有这三个的渲染输出看起来都相同：</p><hr><h2 id="9、链接"><a href="#9、链接" class="headerlink" title="9、链接"></a>9、链接</h2><p>要创建链接，请将链接文本括在方括号（例如<code>[Duck Duck Go]</code>）中，然后立即在URL后面加上括号（例如<code>(https://duckduckgo.com)</code>）中的URL 。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">My</span> <span class="hljs-selector-tag">favorite</span> <span class="hljs-selector-tag">search</span> <span class="hljs-selector-tag">engine</span> <span class="hljs-selector-tag">is</span> <span class="hljs-selector-attr">[Duck Duck Go]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//duckduckgo.com).</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p>我最喜欢的搜索引擎是<a href="https://duckduckgo.com/">Duck Duck Go</a>。</p><h3 id="添加标题"><a href="#添加标题" class="headerlink" title="添加标题"></a>添加标题</h3><p>您可以选择为链接添加标题。当用户将鼠标悬停在链接上时，这将显示为工具提示。要添加标题，请将其括在URL后面的括号中。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">My</span> <span class="hljs-selector-tag">favorite</span> <span class="hljs-selector-tag">search</span> <span class="hljs-selector-tag">engine</span> <span class="hljs-selector-tag">is</span> <span class="hljs-selector-attr">[Duck Duck Go]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//duckduckgo.com &quot;The best search engine for privacy&quot;).</span><br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p>我最喜欢的搜索引擎是<a href="https://duckduckgo.com/">Duck Duck Go</a>。</p><h3 id="网址和电子邮件地址"><a href="#网址和电子邮件地址" class="headerlink" title="网址和电子邮件地址"></a>网址和电子邮件地址</h3><p>要将URL或电子邮件地址快速转换为链接，请将其括在尖括号中。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;https:<span class="hljs-comment">//markdown.p2hp.com&gt;</span><br>&lt;<span class="hljs-symbol">fake@</span>example.com&gt;<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p><a href="http://markdown.p2hp.com/index.html">https://markdown.p2hp.com</a><br><a href="mailto:fake@example.com">fake@example.com</a></p><h3 id="格式化链接"><a href="#格式化链接" class="headerlink" title="格式化链接"></a>格式化链接</h3><p>为了<a href="http://markdown.p2hp.com/basic-syntax/index.html#emphasis">强调</a>链接，请在方括号和括号之前和之后添加星号。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">I love supporting the <span class="hljs-strong">**[<span class="hljs-string">EFF</span>](<span class="hljs-link">https://eff.org</span>)**</span>.<br>This is the <span class="hljs-emphasis">*[<span class="hljs-string">Markdown Guide</span>](<span class="hljs-link">https://markdown.p2hp.com</span>)*</span>.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p>我喜欢支持**<a href="https://eff.org/">EFF</a>*<em>。<br>这是《</em><a href="http://markdown.p2hp.com/index.html">Markdown指南》</a>*。</p><h3 id="参考样式链接"><a href="#参考样式链接" class="headerlink" title="参考样式链接"></a>参考样式链接</h3><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。引用样式的链接分为两部分：与文本保持内联的部分以及在文件中其他位置存储的部分，以使文本易于阅读。</p><h4 id="格式化链接的第一部分"><a href="#格式化链接的第一部分" class="headerlink" title="格式化链接的第一部分"></a>格式化链接的第一部分</h4><p>参考样式链接的第一部分使用两组括号进行格式化。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，但您可以在第一组和第二组支架之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p><p>这意味着以下示例格式对于链接的第一部分大致相同：</p><ul><li><code>[hobbit-hole][1]</code></li><li><code>[hobbit-hole] [1]</code></li></ul><h4 id="格式化链接的第二部分"><a href="#格式化链接的第二部分" class="headerlink" title="格式化链接的第二部分"></a>格式化链接的第二部分</h4><p>引用样式链接的第二部分使用以下属性设置格式：</p><ol><li>标签放在方括号中，后紧跟冒号和至少一个空格（例如<code>[label]: </code>）。</li><li>链接的URL，您可以选择将其括在尖括号中。</li><li>链接的可选标题，您可以将其括在双引号，单引号或括号中。</li></ol><p>这意味着以下示例格式对于链接的第二部分几乎都是等效的：</p><ul><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li></ul><p>您可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，而其他人则将它们放在文档的末尾（例如尾注或脚注）。</p><h4 id="将零件放在一起的示例"><a href="#将零件放在一起的示例" class="headerlink" title="将零件放在一起的示例"></a>将零件放在一起的示例</h4><p>假设您添加一个URL作为到段落的<a href="http://markdown.p2hp.com/basic-syntax/index.html#links">标准URL链接</a>，并且在Markdown中看起来像这样：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">In <span class="hljs-keyword">a</span> hole <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> ground there lived <span class="hljs-keyword">a</span> hobbit. Not <span class="hljs-keyword">a</span> nasty, dirty, wet hole, filled <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">ends</span><br><span class="hljs-keyword">of</span> worms <span class="hljs-keyword">and</span> <span class="hljs-keyword">an</span> oozy smell, nor yet <span class="hljs-keyword">a</span> dry, bare, sandy hole <span class="hljs-keyword">with</span> nothing <span class="hljs-keyword">in</span> <span class="hljs-keyword">it</span> <span class="hljs-built_in">to</span> sit down <span class="hljs-keyword">on</span> <span class="hljs-title">or</span> <span class="hljs-title">to</span><br>eat: <span class="hljs-keyword">it</span> was <span class="hljs-keyword">a</span> [hobbit-hole](<span class="hljs-keyword">https</span>://en.wikipedia.org/wiki/Hobbit<span class="hljs-comment">#Lifestyle &quot;Hobbit lifestyles&quot;), and that means comfort.</span><br></code></pre></td></tr></table></figure><p>尽管它可能指向有趣的附加信息，但显示的URL确实不会给现有的原始文本增加太多，除了使其难以阅读之外。要解决此问题，您可以改为设置网址格式：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs smali">In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole,<span class="hljs-built_in"> filled </span>with the ends<br>of worms<span class="hljs-built_in"> and </span>an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on<span class="hljs-built_in"> or </span>to<br>eat: it was a [hobbit-hole][1],<span class="hljs-built_in"> and </span>that means comfort.<br><br>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit<span class="hljs-comment">#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</span><br></code></pre></td></tr></table></figure><p>在上述两种情况下，呈现的输出将相同：</p><blockquote><p>在地上的一个洞里住着一个霍比特人。这不是一个肮脏，肮脏，潮湿的洞，里面充满蠕虫的末端和难闻的气味，也没有一个干燥，裸露，沙质的洞，里面没有东西可以坐下或进食：那是一个<a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">霍比特洞</a>，意味着舒适。</p></blockquote><p>链接HTML为：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&quot;</span> <span class="hljs-attribute">title</span>=<span class="hljs-string">&quot;Hobbit lifestyles&quot;</span>&gt;hobbit-hole&lt;/a&gt;<br></code></pre></td></tr></table></figure><h2 id="10、图片"><a href="#10、图片" class="headerlink" title="10、图片"></a>10、图片</h2><p>要添加图像，请添加感叹号（<code>!</code>），然后在括号中添加替代文本，并在括号中添加图像资源的路径或URL。您可以选择在括号中的URL之后添加标题。</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">![Philadelphia&#x27;s Magic Gardens. This place was so cool!](/assets/images/philly-magic-gardens.jpg <span class="hljs-string">&quot;Philadelphia&#x27;s Magic Gardens&quot;</span>)<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p><img src="https://d33wubrfki0l68.cloudfront.net/eab45e25bb79970178fab7a2d10cba0209372a59/94d9e/assets/images/philly-magic-garden.jpg" alt="费城的魔法花园。 这个地方真酷！"></p><h3 id="链接图像"><a href="#链接图像" class="headerlink" title="链接图像"></a>链接图像</h3><p>要向图像添加链接，请将图像的Markdown括在方括号中，然后在括号中添加链接。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[![An old rock in the desert](/assets/images/shiprock.jpg &quot;Shiprock, New Mexico by Beau Rogers&quot;)](https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw<span class="hljs-string">-34</span>mt9F-a9Cmfy<span class="hljs-string">-5</span>Ha3Zi<span class="hljs-string">-9</span>msKdv-o3hgjr-hWpUte<span class="hljs-string">-4</span>WMsJ1-KUQ8N-deshUb-vssBD<span class="hljs-string">-6</span>CQci6<span class="hljs-string">-8</span>AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn<span class="hljs-string">-5</span>HtSXY<span class="hljs-string">-6</span>CUhAL-a4UTXB-ugPum-KUPSo-fBLNm<span class="hljs-string">-6</span>CUmpy<span class="hljs-string">-4</span>WMsc9<span class="hljs-string">-8</span>a7D3T<span class="hljs-string">-83</span>KJev<span class="hljs-string">-6</span>CQ2bK-nNusHJ-a78rQH-nw3NvT<span class="hljs-string">-7</span>aq2qf<span class="hljs-string">-8</span>wwBso<span class="hljs-string">-3</span>nNceh-ugSKP<span class="hljs-string">-4</span>mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv)<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p><a href="https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv"><img src="https://d33wubrfki0l68.cloudfront.net/70a143fdf134aacde3740662a2a47a2a1ee0d216/276c9/assets/images/shiprock.jpg" alt="沙漠中的一块老石头"></a></p><h2 id="11、转义字符"><a href="#11、转义字符" class="headerlink" title="11、转义字符"></a>11、转义字符</h2><p>要显示原义字符，否则将用于设置Markdown文档中的文本格式<code>\</code>，请在字符前面添加反斜杠（）。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">\* Without <span class="hljs-keyword">the</span> <span class="hljs-literal">backslash</span>, this would be <span class="hljs-keyword">a</span> bullet <span class="hljs-keyword">in</span> <span class="hljs-keyword">an</span> unordered list.<br></code></pre></td></tr></table></figure><p>呈现的输出如下所示：</p><p>*如果没有反斜杠，这将是无序列表中的项目符号。</p><h3 id="你可以转义的字符"><a href="#你可以转义的字符" class="headerlink" title="你可以转义的字符"></a>你可以转义的字符</h3><p>您可以使用反斜杠转义以下字符。</p><table><thead><tr><th>字符</th><th>名称</th></tr></thead><tbody><tr><td>\</td><td>反斜杠</td></tr><tr><td>`</td><td>刻度线（另请参见<a href="http://markdown.p2hp.com/basic-syntax/index.html#escaping-tick-marks">转义刻度线中的代码</a>）</td></tr><tr><td>*</td><td>星号</td></tr><tr><td>_</td><td>下划线</td></tr><tr><td>{}</td><td>大括号</td></tr><tr><td>[]</td><td>中括号</td></tr><tr><td>()</td><td>括号</td></tr><tr><td>#</td><td>井号</td></tr><tr><td>+</td><td>加号</td></tr><tr><td>-</td><td>减号（连字符）</td></tr><tr><td>.</td><td>点</td></tr><tr><td>!</td><td>感叹号</td></tr><tr><td>|</td><td>管道（另请参见表中的<a href="http://markdown.p2hp.com/extended-syntax/index.html#escaping-pipe-characters-in-tables">转义管道</a>）</td></tr></tbody></table><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://markdown.p2hp.com/basic-syntax/">文档markdown.p2hp.com/basic-syntax</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPic+七牛云图床</title>
      <link href="/posts/b5c89f8e.html"/>
      <url>/posts/b5c89f8e.html</url>
      
        <content type="html"><![CDATA[<h1 id="注册七牛云"><a href="#注册七牛云" class="headerlink" title="注册七牛云"></a>注册七牛云</h1><h2 id="注册七牛账户"><a href="#注册七牛账户" class="headerlink" title="注册七牛账户"></a>注册七牛账户</h2><p>这点比较简单，直接到 <a href="https://portal.qiniu.com/home">这里</a> 注册即可。</p><h2 id="在七牛中新建空间"><a href="#在七牛中新建空间" class="headerlink" title="在七牛中新建空间"></a>在七牛中新建空间</h2><p>七牛的数据处理是以 <strong>资源</strong> 为单位的，这里我们可以简单理解为七牛中的 <strong>文件夹</strong>。<br>登录七牛后，进入 <a href="https://portal.qiniu.com/kodo/bucket?shouldCreateBucket=true"><strong>添加资源</strong></a> 页面，选择添加 <strong><strong>对象存储Kodo</strong></strong>, 新建空间，默认即可。</p><h2 id="在-iPic-中添加七牛图床"><a href="#在-iPic-中添加七牛图床" class="headerlink" title="在 iPic 中添加七牛图床"></a>在 iPic 中添加七牛图床</h2><p>打开 偏好设置，进入 图床 页，选择添加 七牛。</p><p><img src="https://qiniu.calmchen.com/blog/2022-05-06-ipicqn.png" alt="ipic设置七牛图床"></p><p>以下分别介绍各项的意义及如何配置：</p><p><strong><strong>Bucket</strong></strong><br>七牛创建空间设置的空间名称<br><strong><strong>AccessKey</strong></strong> 与 <strong><strong>SecretKey</strong></strong><br>可以简单理解为七牛的隐身账户和密码<br>进入 个人面板 &gt; 密钥管理页，依次将 AK、SK 中的内容复制到 iPic 对应的 <strong><strong>AccessKey</strong></strong>、<strong><strong>SecretKey</strong></strong> 中</p><p><img src="https://qiniu.calmchen.com/blog/2022-05-06-qnkey.jpg" alt="密钥管理页"></p><p><strong><strong>Http 前缀</strong></strong><br>用于生成上传图片的完成 Http 路径<br><img src="https://qiniu.calmchen.com/blog/2022-05-06-qndomain-1.png"></p><p>完成输入后，可以点击 <strong><strong>验证</strong></strong> 按钮。如果输入没有问题，则右侧会出现 <strong><strong>通过</strong></strong> 链接，点击后就可以看到测试时上传至七牛的图片。<br>最后，点击 <strong><strong>应用</strong></strong> 按钮进行保存。<br>注：本文中的图就是通过上述方式先上传至七牛、再粘贴至 Markdown 编辑器中，确实很方便，大家试试吧</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://toolinbox.net/iPic/">文档toolinbox.net/iPic</a></li><li><a href="https://www.jianshu.com/p/97bf7bbb18ee">在 iPic 中添加七牛云</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 七牛云 </category>
          
          <category> iPic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 七牛云 </tag>
            
            <tag> iPic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】IDEA破解</title>
      <link href="/posts/ecdab4ad.html"/>
      <url>/posts/ecdab4ad.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载最新的-IDEA-2022-版本安装包"><a href="#一、下载最新的-IDEA-2022-版本安装包" class="headerlink" title="一、下载最新的 IDEA 2022 版本安装包"></a>一、下载最新的 IDEA 2022 版本安装包</h2><p>我们先从 IDEA 官网下载 IDEA 2022 最新版本的安装包，下载链接如下：<br><a href="https://www.jetbrains.com/idea/download">https://www.jetbrains.com/idea/download</a></p><h2 id="二、先卸载老版本的-IDEA"><a href="#二、先卸载老版本的-IDEA" class="headerlink" title="二、先卸载老版本的 IDEA"></a>二、先卸载老版本的 IDEA</h2><h3 id="1、卸载、干净"><a href="#1、卸载、干净" class="headerlink" title="1、卸载、干净"></a>1、卸载、干净</h3><p>如果电脑上之前有安装老版本的 IDEA, 需要先卸载干净，否则可能安装失败！<br>一定要先卸载干净掉老版本的 IDEA。</p><p>出现IDEA卸载界面，全部勾选选择项，表示同时删除配置文件，然后点击Uninstall<br><img src="/img.png"></p><p>卸载成功后，点击关闭</p><h2 id="三、开始安装-IDEA-2022-版本"><a href="#三、开始安装-IDEA-2022-版本" class="headerlink" title="三、开始安装 IDEA 2022 版本"></a>三、开始安装 IDEA 2022 版本</h2><p>安装完成后，勾选 Run IntelliJ IDEA，点击 Finish 运行软件:</p><h2 id="四、开始激活，破解-IDEA-2022-版本"><a href="#四、开始激活，破解-IDEA-2022-版本" class="headerlink" title="四、开始激活，破解 IDEA 2022 版本"></a>四、开始激活，破解 IDEA 2022 版本</h2><p>DEA 运行成功后，会弹出下面的对话框，提示我们需要先登录 JetBrains<br>这里我们先不管，先点击 Exit 退出，准备开始运行激活脚本</p><h2 id="五、清空-IDEA-以前使用过的激活方式和配置文件【非常重要】"><a href="#五、清空-IDEA-以前使用过的激活方式和配置文件【非常重要】" class="headerlink" title="五、清空 IDEA 以前使用过的激活方式和配置文件【非常重要】"></a>五、清空 IDEA 以前使用过的激活方式和配置文件【非常重要】</h2><p>如果你之前安装过 IDEA, 那么修改过的 hosts 文件要还原回去、引用过的补丁要移除掉, 不然可能会与本文提供的补丁有冲突，出现各种奇奇怪怪的问题。</p><p>如果没有动过 hosts 文件，则不用管，继续走下面的步骤。</p><p>删除旧版配置文件<br>在以下目录，删除配置文件</p><p>C:Users【系统用户名】AppDataRoamingJetBrains<br>未安装老版本 IDEA 的小伙伴直接跳过，看后面步骤就行:</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://tech.souyunku.com/?p=15076">转载链接</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel + Elasticsearch 实现中文搜索</title>
      <link href="/posts/3acc6de0.html"/>
      <url>/posts/3acc6de0.html</url>
      
        <content type="html"><![CDATA[<h1 id="Laravel-Elasticsearch-实现中文搜索"><a href="#Laravel-Elasticsearch-实现中文搜索" class="headerlink" title="Laravel + Elasticsearch 实现中文搜索"></a>Laravel + Elasticsearch 实现中文搜索</h1><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><ul><li>Laravel7 配置 Scout</li><li>配置 Model 模型</li><li>导入数据</li><li>搜索</li></ul><h3 id="搜索范围"><a href="#搜索范围" class="headerlink" title="搜索范围"></a>搜索范围</h3><ul><li>文章内容</li><li>标题</li><li>标签</li></ul><h3 id="结果权重"><a href="#结果权重" class="headerlink" title="结果权重"></a>结果权重</h3><ol><li>出现关键词数量</li><li>出现关键词次数</li></ol><h3 id="搜索页面"><a href="#搜索页面" class="headerlink" title="搜索页面"></a>搜索页面</h3><ul><li>高亮显示</li><li>分词显示</li><li>结果分页</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Laravel + Elasticsearch 很多前辈都写过教程和案例，但是随着 Elasticsearch 和 laravel 的版本升级 以前的文章很多都不适用新版本的，建议大家使用任何开源项目时应该过一遍文档以当前使用的版本文档为主，教程为辅</p><ul><li>Elasticsearch 7.9</li><li>Laravel 7</li><li>elasticsearch-analysis-ik v7.9</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>ik 中文分词插件</li><li>elasticsearch 官方文档</li></ul><h3 id="使用集成-ik中文分词插件的-Elasticsearch"><a href="#使用集成-ik中文分词插件的-Elasticsearch" class="headerlink" title="使用集成 ik中文分词插件的 Elasticsearch"></a>使用集成 ik中文分词插件的 Elasticsearch</h3><p>Laravel 项目中使用 Elasticsearch</p><p>Elasticsearch 官方有提供 SDK，在 Laravel 项目中可以更加优雅快速的接入 Elasticsearch，Laravel 本身有提供 Scout 全文搜索 的解决方案，我们只需将默认的 Algolia 驱动 替换成 ElasticSearch驱动。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>laravel/scout</li><li>matchish/laravel-scout-elasticsearch</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">composer require laravel/scout</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">composer require matchish/laravel-scout-elasticsearch</span><br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>生成 Scout 配置文件 (config/scout.php)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php artisan vendor:publish --provider=&quot;Laravel\Scout\ScoutServiceProvider&quot;<br></code></pre></td></tr></table></figure><p>Copied File [\vendor\laravel\scout\config\scout.php] To [\config\scout.php]<br>Publishing complete.</p><h3 id="指定-Scout-驱动"><a href="#指定-Scout-驱动" class="headerlink" title="指定 Scout 驱动"></a>指定 Scout 驱动</h3><ul><li>第一种：在.env 文件中指定（建议）</li><li>第二种：在 config/scout.php 直接修改默认驱动<br>‘driver’ =&gt; env(‘SCOUT_DRIVER’, ‘algolia’)<br>改为<br>‘driver’ =&gt; env(‘SCOUT_DRIVER’, ‘Matchish\ScoutElasticSearch\Engines\ElasticSearchEngine’)<br>指定 Elasticsearch 服务 IP 端口</li></ul><p>在.env 中配置<br>ELASTICSEARCH_HOST=172.17.0.1:9200<br>注册服务<br>config/app.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&#x27;providers&#x27;</span> =&gt; [<br><span class="hljs-comment">// Other Service Providers</span><br><span class="hljs-title class_">\Matchish\ScoutElasticSearch\ElasticSearchServiceProvider</span>::<span class="hljs-variable language_">class</span><br>],<br></code></pre></td></tr></table></figure><p>清除配置缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php artisan config:clear<br></code></pre></td></tr></table></figure><p>至此 laravel 已经接入 Elasticsearch</p><p>实际业务中使用<br>需求</p><p>通过博客右上角的搜索框可以搜索到与关键词相关的文章，从以下几点匹配</p><p>商品名称<br>商品desc</p><p>品牌名称</p><p>品牌desc</p><p>分类名称</p><p>分类desc</p><p>涉及到 3 张 Mysql 表 以及字段</p><p>为文章配置 Elasticsearch 索引<br>创建索引配置文件（config/elasticsearch.php）</p><p>elasticsearch.php 配置字段映射</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-keyword">return</span> [<br>    <span class="hljs-string">&#x27;host&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">env</span>(<span class="hljs-string">&#x27;ELASTICSEARCH_HOST&#x27;</span>),<br>    <span class="hljs-string">&#x27;indices&#x27;</span> =&gt; [<br>        <span class="hljs-string">&#x27;mappings&#x27;</span> =&gt; [<br>            <span class="hljs-string">&#x27;goods&#x27;</span> =&gt; [<br>                <span class="hljs-string">&quot;properties&quot;</span> =&gt; [<br>                    <span class="hljs-string">&quot;goods-name&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                    <span class="hljs-string">&quot;brief&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                    <span class="hljs-string">&quot;brand-name&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                    <span class="hljs-string">&quot;brand-desc&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                    <span class="hljs-string">&quot;category-name&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                    <span class="hljs-string">&quot;category-desc&quot;</span> =&gt; [<br>                        <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;text&quot;</span>,<br>                        <span class="hljs-string">&quot;analyzer&quot;</span> =&gt; <span class="hljs-string">&quot;standard&quot;</span>,<br>                    ],<br>                ]<br>            ],<br>        ],<br>        <span class="hljs-string">&#x27;settings&#x27;</span> =&gt; [<br>            <span class="hljs-string">&#x27;default&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;number_of_shards&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&#x27;number_of_replicas&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>            ],<br>        ],<br>    ],<br><br>];<br></code></pre></td></tr></table></figure><p>analyzer：字段文本的分词器<br>search_analyzer：搜索词的分词器<br>根据具体业务场景选择 (颗粒小占用资源多，一般场景 analyzer 使用 ik_max_word,search_analyzer 使用 ik_smart):<br>ik_max_word：ik 中文分词插件提供，对文本进行最大数量分词<br>laravel天下无敌 -&gt; laravel，天下无敌 , 天下 , 无敌<br>ik_smart: ik 中文分词插件提供，对文本进行最小数量分词<br>laravel天下无敌 -&gt; laravel，天下无敌<br>配置文章模型<br>建议先看一遍 Laravel Scout 使用文档</p><p>引入 Laravel Scout</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Models</span>\<span class="hljs-title class_">Goods</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Models</span>\<span class="hljs-title">BaseModel</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Database</span>\<span class="hljs-title">Eloquent</span>\<span class="hljs-title">Factories</span>\<span class="hljs-title">HasFactory</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Laravel</span>\<span class="hljs-title">Scout</span>\<span class="hljs-title">Searchable</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Goods</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseModel</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">use</span> <span class="hljs-title">HasFactory</span>, <span class="hljs-title">Searchable</span>;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$table</span> = <span class="hljs-string">&#x27;goods&#x27;</span>;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$fillable</span> = [];<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$casts</span> = [<br>        <span class="hljs-string">&#x27;counter_price&#x27;</span> =&gt; <span class="hljs-string">&#x27;float&#x27;</span>,<br>        <span class="hljs-string">&#x27;retail_price&#x27;</span> =&gt; <span class="hljs-string">&#x27;float&#x27;</span>,<br>        <span class="hljs-string">&#x27;is_hot&#x27;</span> =&gt; <span class="hljs-string">&#x27;boolean&#x27;</span>,<br>        <span class="hljs-string">&#x27;is_new&#x27;</span> =&gt; <span class="hljs-string">&#x27;boolean&#x27;</span>,<br>        <span class="hljs-string">&#x27;gallery&#x27;</span> =&gt; <span class="hljs-string">&#x27;array&#x27;</span>,<br>        <span class="hljs-string">&#x27;isOnSale&#x27;</span> =&gt; <span class="hljs-string">&#x27;boolean&#x27;</span>,<br><br>    ];<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定索引</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> string</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">searchableAs</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;goods&#x27;</span>;<br>    &#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置导入索引的数据字段</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> array</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toSearchableArray</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> [<br>            <span class="hljs-string">&#x27;goods-name&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;name,<br>            <span class="hljs-string">&#x27;brief&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;brief,<br>            <span class="hljs-string">&#x27;brand-name&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;brand-&gt;name ?? <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;brand-desc&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;brand-&gt;desc ?? <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;category-name&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;category-&gt;name ?? <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;category-desc&#x27;</span> =&gt; <span class="hljs-variable language_">$this</span>-&gt;category-&gt;desc ?? <span class="hljs-string">&#x27;&#x27;</span>,<br>        ];<br><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定 搜索索引中存储的唯一ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> mixed</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getScoutKey</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;id;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定 搜索索引中存储的唯一ID的键名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> string</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getScoutKeyName</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;id&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">category</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">hasOne</span>(<span class="hljs-title class_">Category</span>::<span class="hljs-variable language_">class</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;category_id&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">brand</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">hasOne</span>(<span class="hljs-title class_">Brand</span>::<span class="hljs-variable language_">class</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;brand_id&#x27;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 一键自动导入: </span><br>$ php artisan scout:import<br><span class="hljs-comment"># 导入指定模型: </span><br>$ php artisan scout:import <span class="hljs-variable">$&#123;model&#125;</span><br>$ php artisan scout:import <span class="hljs-string">&quot;App\Models\Blog\Article&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">Importing [App\Models\Goods\Goods]<br>Switching to the new index<br>5/5 [⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬⚬] 100%<br><br>                                                                                                                        <br> [OK] All [App\Models\Goods\Goods] records have been imported.<br><br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Http</span>\<span class="hljs-title class_">Controllers</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Controllers</span>\<span class="hljs-title">Wx</span>\<span class="hljs-title">WxController</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Models</span>\<span class="hljs-title">Goods</span>\<span class="hljs-title">Goods</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Carbon</span>\<span class="hljs-title">Carbon</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Request</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">WxController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$only</span> = [];<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params">Request <span class="hljs-variable">$request</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$search</span> = <span class="hljs-variable">$request</span>-&gt;<span class="hljs-title function_ invoke__">input</span>(<span class="hljs-string">&#x27;search&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>        <span class="hljs-variable">$startTime</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;<span class="hljs-title function_ invoke__">getPreciseTimestamp</span>(<span class="hljs-number">3</span>);<br>        <span class="hljs-variable">$goods</span> = <span class="hljs-title class_">Goods</span>::<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-variable">$search</span>)<br>            -&gt;<span class="hljs-title function_ invoke__">query</span>(function (<span class="hljs-variable">$query</span>) &#123;<br>                <span class="hljs-variable">$query</span>-&gt;<span class="hljs-title function_ invoke__">select</span>([<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;brand_id&#x27;</span>, <span class="hljs-string">&#x27;category_id&#x27;</span>, <span class="hljs-string">&#x27;brief&#x27;</span>]);<br>            &#125;)<br>            -&gt;<span class="hljs-title function_ invoke__">get</span>();<br>        <span class="hljs-variable">$userTime</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;<span class="hljs-title function_ invoke__">getPreciseTimestamp</span>(<span class="hljs-number">3</span>) - <span class="hljs-variable">$startTime</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;耗时(毫秒)：<span class="hljs-subst">&#123;$userTime&#125;</span> \n&quot;</span>;<br>        <span class="hljs-comment">//content在另外一张表中，方便观察测试 这里输出</span><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$goods</span>)) &#123;<br>            <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$goods</span> <span class="hljs-keyword">as</span> &amp;<span class="hljs-variable">$good</span>) &#123;<br>                <span class="hljs-variable">$brand</span> = <span class="hljs-variable">$good</span>-&gt;brand;<br>                <span class="hljs-variable">$category</span> = <span class="hljs-variable">$good</span>-&gt;category;<br>                <span class="hljs-variable">$good</span>[<span class="hljs-string">&#x27;brand_name&#x27;</span>] = <span class="hljs-variable">$brand</span>-&gt;name ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>                <span class="hljs-variable">$good</span>[<span class="hljs-string">&#x27;brand_desc&#x27;</span>] = <span class="hljs-variable">$brand</span>-&gt;desc ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>                <span class="hljs-variable">$good</span>[<span class="hljs-string">&#x27;category_name&#x27;</span>] = <span class="hljs-variable">$category</span>-&gt;name ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>                <span class="hljs-variable">$good</span>[<span class="hljs-string">&#x27;category_desc&#x27;</span>] = <span class="hljs-variable">$category</span>-&gt;desc ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>                <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$good</span>-&gt;brand);<br>                <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$good</span>-&gt;category);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">success</span>(<span class="hljs-variable">$goods</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>$client 官方 elasticsearch/elasticsearch package</li><li>$body ongr/elasticsearch-dsl package</li></ul>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
          <category> Elasticsearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK部署Linux</title>
      <link href="/posts/7616fb11.html"/>
      <url>/posts/7616fb11.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-elasticsearch简介"><a href="#1-elasticsearch简介" class="headerlink" title="1. elasticsearch简介"></a><strong>1. elasticsearch简介</strong></h2><blockquote><p>elasticsearch介绍</p></blockquote><p>Elasticsearch 是一个分布式、高扩展、高实时的搜索与数据分析引擎。它能很方便的使大量数据具有搜索、分析和探索的能力。充分利用Elasticsearch的水平伸缩性，能使数据在生产环境变得更有价值。Elasticsearch 的实现原理主要分为以下几个步骤，首先用户将数据提交到Elasticsearch 数据库中，再通过分词控制器去将对应的语句分词，将其权重和分词结果一并存入数据，当用户搜索数据时候，再根据权重将结果排名，打分，再将返回结果呈现给用户。</p><blockquote><p>应用场景</p></blockquote><ul><li>维基百科，类似百度百科</li><li>The Guardian（国外新闻网站）</li><li>Stack Overflow（国外的程序异常讨论论坛）</li><li>GitHub（开源代码管理）</li><li>电商网站</li><li>日志数据分析</li><li>商品价格监控网站</li><li>BI系统，商业智能</li><li>站内搜索（电商，招聘，门户，等等），</li><li>IT系统搜索（OA，CRM，ERP，等等），</li><li>数据分析（ES热门的一个使用场景）</li></ul><blockquote><p>es的功能</p></blockquote><ul><li>分布式的搜索引擎和数据分析引擎</li><li>全文检索，结构化检索，数据分析</li><li>对海量数据进行近实时的处理</li></ul><blockquote><p>es的特点</p></blockquote><ol><li>大型分布式集群</li><li>功能强大</li><li>部署简单</li><li>能够替代数据库的不足之处</li></ol><h2 id="2-elasticsearch的安装配置"><a href="#2-elasticsearch的安装配置" class="headerlink" title="2. elasticsearch的安装配置"></a><strong>2. elasticsearch的安装配置</strong></h2><ol><li>docker获取es的镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull elasticsearch:7.12.1<br></code></pre></td></tr></table></figure><ol><li>创建es文件目录以及创建配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /docker<br><span class="hljs-built_in">mkdir</span> /docker/es<br><span class="hljs-built_in">mkdir</span> /docker/es/conf<br><span class="hljs-built_in">mkdir</span> /docker/es/data<br><span class="hljs-built_in">mkdir</span> /docker/es/plugins<br><span class="hljs-built_in">chmod</span> -R 777 /docker/es<br><br><span class="hljs-built_in">touch</span> /docker/es/conf/elasticsearch.yml<br><br>cluster.name: my-application       <span class="hljs-comment">#集群名称</span><br>node.name: node-1                  <span class="hljs-comment">#节点名称</span><br><span class="hljs-comment">#数据和日志的存储目录</span><br>path.data: /usr/share/elasticsearch/data<br>path.logs: /usr/share/elasticsearch/logs<br><span class="hljs-comment">###设置绑定的ip，设置为0.0.0.0以后就可以让任何计算机节点访问到了</span><br>network.host: 0.0.0.0<br>http.port: 9200 <span class="hljs-comment">#端口</span><br><span class="hljs-comment">###设置在集群中的所有节点名称，这个节点名称就是之前所修改的，当然你也可以采用默认的也行，目前 是单机，放入一个节点即可</span><br>cluster.initial_master_nodes: [<span class="hljs-string">&quot;node-1&quot;</span>]<br><span class="hljs-comment">### 设置密码</span><br><span class="hljs-comment">#xpack.security.enabled: true</span><br><span class="hljs-comment">#xpack.license.self_generated.type: basic</span><br><span class="hljs-comment">#xpack.security.transport.ssl.enabled: true</span><br><br><span class="hljs-comment"># 配置X-Pack</span><br>http.cors.allow-origin: <span class="hljs-string">&quot;*&quot;</span><br><span class="hljs-comment">#http.cors.allow-headers: Authorization</span><br><br></code></pre></td></tr></table></figure><ol><li>构建容器</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -p 9200:9200 -d --name es -e ES_JAVA_OPTS=<span class="hljs-string">&quot;-Xms512m -Xmx512m&quot;</span> -v /docker/es/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /docker/es/data:/usr/share/elasticsearch/data -v /docker/es/logs:/usr/share/elasticsearch/logs -v /docker/es/plugins:/usr/share/elasticsearch/plugins --privileged=<span class="hljs-literal">true</span> elasticsearch:7.12.<br><br>出现异常：max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]<br>解决：<br>1. 修改配置sysctl.conf<br>vi /etc/sysctl.conf<br><br>2. 在尾行添加以下内容<br>vm.max_map_count=655300<br><br>3. 执行命令<br>sysctl -p<br></code></pre></td></tr></table></figure><ol><li>拉取kibana镜像</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull kibana:<span class="hljs-number">7</span>.<span class="hljs-number">12</span>.<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><ol><li>kibana的配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /docker/kibana<br><span class="hljs-built_in">mkdir</span> /docker/kibana/conf<br><span class="hljs-built_in">touch</span> /docker/kibana/conf/kibana.yml<br><br>文件内容：<br>server.name: kibana<br>server.host: <span class="hljs-string">&quot;0.0.0.0&quot;</span><br>elasticsearch.hosts: [<span class="hljs-string">&quot;http://你的es地址:9200&quot;</span>]<br>xpack.monitoring.ui.container.elasticsearch.enabled: <span class="hljs-literal">true</span><br><span class="hljs-comment">#冒号后必须加空格  设置中文</span><br>i18n.locale: <span class="hljs-string">&quot;zh-CN&quot;</span><br></code></pre></td></tr></table></figure><ol><li>构建kibana的容器</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -p 5601:5601 -d --name kibana -v /docker/kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml --privileged=<span class="hljs-literal">true</span> kibana:7.12.1<br></code></pre></td></tr></table></figure><p>访问xxxxxxx:9200与xxxxx:5601</p><p>kibana：</p><p><img src="https://qiniu.calmchen.com/blog/2022-05-06-kibana_success.png" alt="kibana部署成功截图"><br>elasticsearch:</p><p><img src="https://qiniu.calmchen.com/blog/2022-05-06-elasticsearch_success.png" alt="elasticsearch部署成功截图"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Elasticsearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
